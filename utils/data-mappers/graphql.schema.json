{
  "__schema": {
    "queryType": {
      "name": "Query"
    },
    "mutationType": {
      "name": "Mutation"
    },
    "subscriptionType": null,
    "types": [
      {
        "kind": "OBJECT",
        "name": "Query",
        "description": "The root query type which gives access points into the data universe.",
        "fields": [
          {
            "name": "query",
            "description": "Exposes the root query type nested one level down. This is helpful for Relay 1\nwhich can only query top level fields if they are in a particular form.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "id",
            "description": "The root query type must be a `Node` to work well with Relay 1 mutations. This just resolves to `query`.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "Fetches an object given its globally unique `ID`.",
            "args": [
              {
                "name": "id",
                "description": "The globally unique `ID`.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allAccounts",
            "description": "Reads and enables pagination through a set of `Account`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Account`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AccountsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AccountCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AccountFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AccountsConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allAccountTagAnnotations",
            "description": "Reads and enables pagination through a set of `AccountTagAnnotation`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `AccountTagAnnotation`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AccountTagAnnotationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[NATURAL]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AccountTagAnnotationsConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allAnnotations",
            "description": "Reads and enables pagination through a set of `Annotation`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Annotation`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AnnotationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AnnotationsConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allAnnotationTags",
            "description": "Reads and enables pagination through a set of `AnnotationTag`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `AnnotationTag`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AnnotationTagsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AnnotationTagsConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allAuthors",
            "description": "Reads and enables pagination through a set of `Author`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Author`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AuthorsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AuthorsConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allBooks",
            "description": "Reads and enables pagination through a set of `Book`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Book`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "BooksOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "BookCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "BookFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "BooksConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allPublications",
            "description": "Reads and enables pagination through a set of `Publication`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Publication`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "PublicationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "PublicationsConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allPublicationAuthors",
            "description": "Reads and enables pagination through a set of `PublicationAuthor`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `PublicationAuthor`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "PublicationAuthorsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "PublicationAuthorsConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "allTags",
            "description": "Reads and enables pagination through a set of `Tag`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Tag`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "TagsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "TagsConnection",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": null,
            "args": [
              {
                "name": "accountId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "UUID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByEmail",
            "description": null,
            "args": [
              {
                "name": "email",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationByAnnotationId",
            "description": null,
            "args": [
              {
                "name": "annotationId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Annotation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationByPublicationIdAndAccountIdAndHighlightLocationAndHighlightText",
            "description": null,
            "args": [
              {
                "name": "publicationId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "accountId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "UUID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "highlightLocation",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "JSON",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "highlightText",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Annotation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationByPublicationIdAndAccountIdAndNoteLocationAndNoteText",
            "description": null,
            "args": [
              {
                "name": "publicationId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "accountId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "UUID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "noteLocation",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "JSON",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "noteText",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Annotation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationTagByAnnotationIdAndTagId",
            "description": null,
            "args": [
              {
                "name": "annotationId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "tagId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AnnotationTag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authorByAuthorId",
            "description": null,
            "args": [
              {
                "name": "authorId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Author",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authorByFullName",
            "description": null,
            "args": [
              {
                "name": "fullName",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Author",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authorByAccountIdAndFullName",
            "description": null,
            "args": [
              {
                "name": "accountId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "UUID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "fullName",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Author",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookByPublicationId",
            "description": null,
            "args": [
              {
                "name": "publicationId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Book",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationByPublicationId",
            "description": null,
            "args": [
              {
                "name": "publicationId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationByAccountIdAndTitle",
            "description": null,
            "args": [
              {
                "name": "accountId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "UUID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "title",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationAuthorByPublicationIdAndAuthorId",
            "description": null,
            "args": [
              {
                "name": "publicationId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "authorId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "PublicationAuthor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tagByTagId",
            "description": null,
            "args": [
              {
                "name": "tagId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Tag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tagByAccountIdAndTagName",
            "description": null,
            "args": [
              {
                "name": "accountId",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "UUID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              },
              {
                "name": "tagName",
                "description": null,
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Tag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "currentAccountId",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isValidMongoId",
            "description": null,
            "args": [
              {
                "name": "id",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "account",
            "description": "Reads a single `Account` using its globally unique `ID`.",
            "args": [
              {
                "name": "id",
                "description": "The globally unique `ID` to be used in selecting a single `Account`.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotation",
            "description": "Reads a single `Annotation` using its globally unique `ID`.",
            "args": [
              {
                "name": "id",
                "description": "The globally unique `ID` to be used in selecting a single `Annotation`.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Annotation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationTag",
            "description": "Reads a single `AnnotationTag` using its globally unique `ID`.",
            "args": [
              {
                "name": "id",
                "description": "The globally unique `ID` to be used in selecting a single `AnnotationTag`.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AnnotationTag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "author",
            "description": "Reads a single `Author` using its globally unique `ID`.",
            "args": [
              {
                "name": "id",
                "description": "The globally unique `ID` to be used in selecting a single `Author`.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Author",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "book",
            "description": "Reads a single `Book` using its globally unique `ID`.",
            "args": [
              {
                "name": "id",
                "description": "The globally unique `ID` to be used in selecting a single `Book`.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Book",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publication",
            "description": "Reads a single `Publication` using its globally unique `ID`.",
            "args": [
              {
                "name": "id",
                "description": "The globally unique `ID` to be used in selecting a single `Publication`.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationAuthor",
            "description": "Reads a single `PublicationAuthor` using its globally unique `ID`.",
            "args": [
              {
                "name": "id",
                "description": "The globally unique `ID` to be used in selecting a single `PublicationAuthor`.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "PublicationAuthor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tag",
            "description": "Reads a single `Tag` using its globally unique `ID`.",
            "args": [
              {
                "name": "id",
                "description": "The globally unique `ID` to be used in selecting a single `Tag`.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "ID",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "Tag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "ID",
        "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Int",
        "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "String",
        "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Boolean",
        "description": "The `Boolean` scalar type represents `true` or `false`.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INTERFACE",
        "name": "Node",
        "description": "An object with a globally unique `ID`.",
        "fields": [
          {
            "name": "id",
            "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": [
          {
            "kind": "OBJECT",
            "name": "Query",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Account",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Publication",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Book",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Annotation",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "AnnotationTag",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Tag",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "PublicationAuthor",
            "ofType": null
          },
          {
            "kind": "OBJECT",
            "name": "Author",
            "ofType": null
          }
        ]
      },
      {
        "kind": "SCALAR",
        "name": "Cursor",
        "description": "A location in a connection that can be used for resuming pagination.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "AccountsOrderBy",
        "description": "Methods to use when ordering `Account`.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "NATURAL",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACCOUNT_ID_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACCOUNT_ID_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "EMAIL_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "EMAIL_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_KEY_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_KEY_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountCondition",
        "description": "A condition to be used against `Account` object types. All fields are tested for equality and combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": "Checks for equality with the object’s `accountId` field.",
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "email",
            "description": "Checks for equality with the object’s `email` field.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "UUID",
        "description": "A universally unique identifier as defined by [RFC 4122](https://tools.ietf.org/html/rfc4122).",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountFilter",
        "description": "A filter to be used against `Account` object types. All fields are combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": "Filter by the object’s `accountId` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "UUIDFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "email",
            "description": "Filter by the object’s `email` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "and",
            "description": "Checks for all expressions in this list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AccountFilter",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "or",
            "description": "Checks for any expressions in this list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AccountFilter",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "not",
            "description": "Negates the expression.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountFilter",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UUIDFilter",
        "description": "A filter to be used against UUID fields. All fields are combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "isNull",
            "description": "Is null (if `true` is specified) or is not null (if `false` is specified).",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "equalTo",
            "description": "Equal to the specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notEqualTo",
            "description": "Not equal to the specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "distinctFrom",
            "description": "Not equal to the specified value, treating null like an ordinary value.",
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notDistinctFrom",
            "description": "Equal to the specified value, treating null like an ordinary value.",
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "in",
            "description": "Included in the specified list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "UUID",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "notIn",
            "description": "Not included in the specified list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "UUID",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "lessThan",
            "description": "Less than the specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lessThanOrEqualTo",
            "description": "Less than or equal to the specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThan",
            "description": "Greater than the specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThanOrEqualTo",
            "description": "Greater than or equal to the specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "StringFilter",
        "description": "A filter to be used against String fields. All fields are combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "isNull",
            "description": "Is null (if `true` is specified) or is not null (if `false` is specified).",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "equalTo",
            "description": "Equal to the specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notEqualTo",
            "description": "Not equal to the specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "distinctFrom",
            "description": "Not equal to the specified value, treating null like an ordinary value.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notDistinctFrom",
            "description": "Equal to the specified value, treating null like an ordinary value.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "in",
            "description": "Included in the specified list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "notIn",
            "description": "Not included in the specified list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "lessThan",
            "description": "Less than the specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lessThanOrEqualTo",
            "description": "Less than or equal to the specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThan",
            "description": "Greater than the specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "greaterThanOrEqualTo",
            "description": "Greater than or equal to the specified value.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "includes",
            "description": "Contains the specified string (case-sensitive).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notIncludes",
            "description": "Does not contain the specified string (case-sensitive).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "includesInsensitive",
            "description": "Contains the specified string (case-insensitive).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notIncludesInsensitive",
            "description": "Does not contain the specified string (case-insensitive).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "startsWith",
            "description": "Starts with the specified string (case-sensitive).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notStartsWith",
            "description": "Does not start with the specified string (case-sensitive).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "startsWithInsensitive",
            "description": "Starts with the specified string (case-insensitive).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notStartsWithInsensitive",
            "description": "Does not start with the specified string (case-insensitive).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "endsWith",
            "description": "Ends with the specified string (case-sensitive).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notEndsWith",
            "description": "Does not end with the specified string (case-sensitive).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "endsWithInsensitive",
            "description": "Ends with the specified string (case-insensitive).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notEndsWithInsensitive",
            "description": "Does not end with the specified string (case-insensitive).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "like",
            "description": "Matches the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notLike",
            "description": "Does not match the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "likeInsensitive",
            "description": "Matches the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notLikeInsensitive",
            "description": "Does not match the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "similarTo",
            "description": "Matches the specified pattern using the SQL standard's definition of a regular expression.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "notSimilarTo",
            "description": "Does not match the specified pattern using the SQL standard's definition of a regular expression.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AccountsConnection",
        "description": "A connection to a list of `Account` values.",
        "fields": [
          {
            "name": "nodes",
            "description": "A list of `Account` objects.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Account",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges which contains the `Account` and cursor to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "AccountsEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalCount",
            "description": "The count of *all* `Account` you could get from the connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Account",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "email",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createdAt",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "status",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "emailVerified",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "group",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "firstName",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "lastName",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationsByAccountId",
            "description": "Reads and enables pagination through a set of `Publication`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Publication`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "PublicationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PublicationsConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationsByAccountId",
            "description": "Reads and enables pagination through a set of `Annotation`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Annotation`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AnnotationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "AnnotationsConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authorsByAccountId",
            "description": "Reads and enables pagination through a set of `Author`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Author`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AuthorsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "AuthorsConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tagsByAccountId",
            "description": "Reads and enables pagination through a set of `Tag`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Tag`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "TagsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TagsConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationsByAnnotationAccountIdAndPublicationId",
            "description": "Reads and enables pagination through a set of `Publication`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Publication`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "PublicationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "AccountPublicationsByAnnotationAccountIdAndPublicationIdManyToManyConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Datetime",
        "description": "A point in time as described by the [ISO\n8601](https://en.wikipedia.org/wiki/ISO_8601) standard. May or may not include a timezone.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "PublicationsOrderBy",
        "description": "Methods to use when ordering `Publication`.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "NATURAL",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PUBLICATION_ID_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PUBLICATION_ID_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACCOUNT_ID_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACCOUNT_ID_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_KEY_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_KEY_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationCondition",
        "description": "A condition to be used against `Publication` object types. All fields are tested\nfor equality and combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": "Checks for equality with the object’s `publicationId` field.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": "Checks for equality with the object’s `accountId` field.",
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationFilter",
        "description": "A filter to be used against `Publication` object types. All fields are combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": "Filter by the object’s `publicationId` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": "Filter by the object’s `accountId` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "UUIDFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "and",
            "description": "Checks for all expressions in this list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationFilter",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "or",
            "description": "Checks for any expressions in this list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationFilter",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "not",
            "description": "Negates the expression.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationFilter",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PublicationsConnection",
        "description": "A connection to a list of `Publication` values.",
        "fields": [
          {
            "name": "nodes",
            "description": "A list of `Publication` objects.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Publication",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges which contains the `Publication` and cursor to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "PublicationsEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalCount",
            "description": "The count of *all* `Publication` you could get from the connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Publication",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createdAt",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "title",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "additionalMeta",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": "Reads a single `Account` that is related to this `Publication`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookByPublicationId",
            "description": "Reads a single `Book` that is related to this `Publication`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Book",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "booksByPublicationId",
            "description": "Reads and enables pagination through a set of `Book`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Book`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "BooksOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "BookCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "BookFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "BooksConnection",
                "ofType": null
              }
            },
            "isDeprecated": true,
            "deprecationReason": "Please use bookByPublicationId instead"
          },
          {
            "name": "annotationsByPublicationId",
            "description": "Reads and enables pagination through a set of `Annotation`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Annotation`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AnnotationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "AnnotationsConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationAuthorsByPublicationId",
            "description": "Reads and enables pagination through a set of `PublicationAuthor`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `PublicationAuthor`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "PublicationAuthorsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PublicationAuthorsConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountsByAnnotationPublicationIdAndAccountId",
            "description": "Reads and enables pagination through a set of `Account`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Account`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AccountsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AccountCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AccountFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PublicationAccountsByAnnotationPublicationIdAndAccountIdManyToManyConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authorsByPublicationAuthorPublicationIdAndAuthorId",
            "description": "Reads and enables pagination through a set of `Author`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Author`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AuthorsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PublicationAuthorsByPublicationAuthorPublicationIdAndAuthorIdManyToManyConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "JSON",
        "description": "A JavaScript object encoded in the JSON format as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Book",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isbn13",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookTitle",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "imageUrl",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "languageCode",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publisher",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationDate",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Date",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookType",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationByPublicationId",
            "description": "Reads a single `Publication` that is related to this `Book`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Date",
        "description": "The day, does not include a time.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "BooksOrderBy",
        "description": "Methods to use when ordering `Book`.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "NATURAL",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PUBLICATION_ID_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PUBLICATION_ID_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_KEY_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_KEY_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BookCondition",
        "description": "A condition to be used against `Book` object types. All fields are tested for equality and combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": "Checks for equality with the object’s `publicationId` field.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BookFilter",
        "description": "A filter to be used against `Book` object types. All fields are combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": "Filter by the object’s `publicationId` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "and",
            "description": "Checks for all expressions in this list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BookFilter",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "or",
            "description": "Checks for any expressions in this list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BookFilter",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "not",
            "description": "Negates the expression.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookFilter",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BooksConnection",
        "description": "A connection to a list of `Book` values.",
        "fields": [
          {
            "name": "nodes",
            "description": "A list of `Book` objects.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Book",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges which contains the `Book` and cursor to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "BooksEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalCount",
            "description": "The count of *all* `Book` you could get from the connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "BooksEdge",
        "description": "A `Book` edge in the connection.",
        "fields": [
          {
            "name": "cursor",
            "description": "A cursor for use in pagination.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The `Book` at the end of the edge.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Book",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PageInfo",
        "description": "Information about pagination in a connection.",
        "fields": [
          {
            "name": "hasNextPage",
            "description": "When paginating forwards, are there more items?",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "hasPreviousPage",
            "description": "When paginating backwards, are there more items?",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "startCursor",
            "description": "When paginating backwards, the cursor to continue.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "endCursor",
            "description": "When paginating forwards, the cursor to continue.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "AnnotationsOrderBy",
        "description": "Methods to use when ordering `Annotation`.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "NATURAL",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ANNOTATION_ID_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ANNOTATION_ID_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PUBLICATION_ID_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PUBLICATION_ID_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACCOUNT_ID_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACCOUNT_ID_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "TSV_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "TSV_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_KEY_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_KEY_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "TSV_RANK_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "TSV_RANK_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationCondition",
        "description": "A condition to be used against `Annotation` object types. All fields are tested\nfor equality and combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": "Checks for equality with the object’s `annotationId` field.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": "Checks for equality with the object’s `publicationId` field.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": "Checks for equality with the object’s `accountId` field.",
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tsv",
            "description": "Checks for equality with the object’s `tsv` field.",
            "type": {
              "kind": "SCALAR",
              "name": "FullText",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "FullText",
        "description": null,
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationFilter",
        "description": "A filter to be used against `Annotation` object types. All fields are combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": "Filter by the object’s `annotationId` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": "Filter by the object’s `publicationId` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": "Filter by the object’s `accountId` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "UUIDFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tsv",
            "description": "Filter by the object’s `tsv` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "FullTextFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "and",
            "description": "Checks for all expressions in this list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationFilter",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "or",
            "description": "Checks for any expressions in this list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationFilter",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "not",
            "description": "Negates the expression.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationFilter",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "FullTextFilter",
        "description": "A filter to be used against FullText fields. All fields are combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "matches",
            "description": "Performs a full text search on the field.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AnnotationsConnection",
        "description": "A connection to a list of `Annotation` values.",
        "fields": [
          {
            "name": "nodes",
            "description": "A list of `Annotation` objects.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Annotation",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges which contains the `Annotation` and cursor to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "AnnotationsEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalCount",
            "description": "The count of *all* `Annotation` you could get from the connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Annotation",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "color",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "highlightLocation",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "highlightText",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "noteText",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "noteLocation",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "recordedAt",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createdAt",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "editedHighlightText",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "extraEdits",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tsv",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "FullText",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationByPublicationId",
            "description": "Reads a single `Publication` that is related to this `Annotation`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": "Reads a single `Account` that is related to this `Annotation`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationTagsByAnnotationId",
            "description": "Reads and enables pagination through a set of `AnnotationTag`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `AnnotationTag`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AnnotationTagsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "AnnotationTagsConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tagsByAnnotationTagAnnotationIdAndTagId",
            "description": "Reads and enables pagination through a set of `Tag`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Tag`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "TagsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "AnnotationTagsByAnnotationTagAnnotationIdAndTagIdManyToManyConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tsvRank",
            "description": "Full-text search ranking when filtered by `tsv`.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Float",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "SCALAR",
        "name": "Float",
        "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "AnnotationTagsOrderBy",
        "description": "Methods to use when ordering `AnnotationTag`.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "NATURAL",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ANNOTATION_ID_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ANNOTATION_ID_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "TAG_ID_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "TAG_ID_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_KEY_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_KEY_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagCondition",
        "description": "A condition to be used against `AnnotationTag` object types. All fields are\ntested for equality and combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": "Checks for equality with the object’s `annotationId` field.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagId",
            "description": "Checks for equality with the object’s `tagId` field.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagFilter",
        "description": "A filter to be used against `AnnotationTag` object types. All fields are combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": "Filter by the object’s `annotationId` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagId",
            "description": "Filter by the object’s `tagId` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "and",
            "description": "Checks for all expressions in this list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagFilter",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "or",
            "description": "Checks for any expressions in this list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagFilter",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "not",
            "description": "Negates the expression.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagFilter",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AnnotationTagsConnection",
        "description": "A connection to a list of `AnnotationTag` values.",
        "fields": [
          {
            "name": "nodes",
            "description": "A list of `AnnotationTag` objects.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "AnnotationTag",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges which contains the `AnnotationTag` and cursor to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "AnnotationTagsEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalCount",
            "description": "The count of *all* `AnnotationTag` you could get from the connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AnnotationTag",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tagId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationByAnnotationId",
            "description": "Reads a single `Annotation` that is related to this `AnnotationTag`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Annotation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tagByTagId",
            "description": "Reads a single `Tag` that is related to this `AnnotationTag`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Tag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Tag",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tagId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tagName",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": "Reads a single `Account` that is related to this `Tag`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationTagsByTagId",
            "description": "Reads and enables pagination through a set of `AnnotationTag`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `AnnotationTag`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AnnotationTagsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "AnnotationTagsConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationsByAnnotationTagTagIdAndAnnotationId",
            "description": "Reads and enables pagination through a set of `Annotation`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Annotation`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AnnotationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "TagAnnotationsByAnnotationTagTagIdAndAnnotationIdManyToManyConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TagAnnotationsByAnnotationTagTagIdAndAnnotationIdManyToManyConnection",
        "description": "A connection to a list of `Annotation` values, with data from `AnnotationTag`.",
        "fields": [
          {
            "name": "nodes",
            "description": "A list of `Annotation` objects.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Annotation",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges which contains the `Annotation`, info from the `AnnotationTag`, and the cursor to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "TagAnnotationsByAnnotationTagTagIdAndAnnotationIdManyToManyEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalCount",
            "description": "The count of *all* `Annotation` you could get from the connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TagAnnotationsByAnnotationTagTagIdAndAnnotationIdManyToManyEdge",
        "description": "A `Annotation` edge in the connection, with data from `AnnotationTag`.",
        "fields": [
          {
            "name": "cursor",
            "description": "A cursor for use in pagination.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The `Annotation` at the end of the edge.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Annotation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AnnotationTagsEdge",
        "description": "A `AnnotationTag` edge in the connection.",
        "fields": [
          {
            "name": "cursor",
            "description": "A cursor for use in pagination.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The `AnnotationTag` at the end of the edge.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "AnnotationTag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "TagsOrderBy",
        "description": "Methods to use when ordering `Tag`.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "NATURAL",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "TAG_ID_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "TAG_ID_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "TAG_NAME_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "TAG_NAME_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACCOUNT_ID_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACCOUNT_ID_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_KEY_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_KEY_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagCondition",
        "description": "A condition to be used against `Tag` object types. All fields are tested for equality and combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "tagId",
            "description": "Checks for equality with the object’s `tagId` field.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagName",
            "description": "Checks for equality with the object’s `tagName` field.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": "Checks for equality with the object’s `accountId` field.",
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagFilter",
        "description": "A filter to be used against `Tag` object types. All fields are combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "tagId",
            "description": "Filter by the object’s `tagId` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagName",
            "description": "Filter by the object’s `tagName` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": "Filter by the object’s `accountId` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "UUIDFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "and",
            "description": "Checks for all expressions in this list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagFilter",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "or",
            "description": "Checks for any expressions in this list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagFilter",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "not",
            "description": "Negates the expression.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagFilter",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AnnotationTagsByAnnotationTagAnnotationIdAndTagIdManyToManyConnection",
        "description": "A connection to a list of `Tag` values, with data from `AnnotationTag`.",
        "fields": [
          {
            "name": "nodes",
            "description": "A list of `Tag` objects.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Tag",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges which contains the `Tag`, info from the `AnnotationTag`, and the cursor to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "AnnotationTagsByAnnotationTagAnnotationIdAndTagIdManyToManyEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalCount",
            "description": "The count of *all* `Tag` you could get from the connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AnnotationTagsByAnnotationTagAnnotationIdAndTagIdManyToManyEdge",
        "description": "A `Tag` edge in the connection, with data from `AnnotationTag`.",
        "fields": [
          {
            "name": "cursor",
            "description": "A cursor for use in pagination.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The `Tag` at the end of the edge.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Tag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AnnotationsEdge",
        "description": "A `Annotation` edge in the connection.",
        "fields": [
          {
            "name": "cursor",
            "description": "A cursor for use in pagination.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The `Annotation` at the end of the edge.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Annotation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "PublicationAuthorsOrderBy",
        "description": "Methods to use when ordering `PublicationAuthor`.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "NATURAL",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PUBLICATION_ID_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PUBLICATION_ID_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "AUTHOR_ID_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "AUTHOR_ID_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_KEY_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_KEY_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorCondition",
        "description": "A condition to be used against `PublicationAuthor` object types. All fields are\ntested for equality and combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": "Checks for equality with the object’s `publicationId` field.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorId",
            "description": "Checks for equality with the object’s `authorId` field.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorFilter",
        "description": "A filter to be used against `PublicationAuthor` object types. All fields are combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": "Filter by the object’s `publicationId` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorId",
            "description": "Filter by the object’s `authorId` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "and",
            "description": "Checks for all expressions in this list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorFilter",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "or",
            "description": "Checks for any expressions in this list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorFilter",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "not",
            "description": "Negates the expression.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorFilter",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PublicationAuthorsConnection",
        "description": "A connection to a list of `PublicationAuthor` values.",
        "fields": [
          {
            "name": "nodes",
            "description": "A list of `PublicationAuthor` objects.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PublicationAuthor",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges which contains the `PublicationAuthor` and cursor to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "PublicationAuthorsEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalCount",
            "description": "The count of *all* `PublicationAuthor` you could get from the connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PublicationAuthor",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authorId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationByPublicationId",
            "description": "Reads a single `Publication` that is related to this `PublicationAuthor`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authorByAuthorId",
            "description": "Reads a single `Author` that is related to this `PublicationAuthor`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Author",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Author",
        "description": null,
        "fields": [
          {
            "name": "id",
            "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authorId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fullName",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountId",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": "Reads a single `Account` that is related to this `Author`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationAuthorsByAuthorId",
            "description": "Reads and enables pagination through a set of `PublicationAuthor`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `PublicationAuthor`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "PublicationAuthorsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PublicationAuthorsConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationsByPublicationAuthorAuthorIdAndPublicationId",
            "description": "Reads and enables pagination through a set of `Publication`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Publication`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "PublicationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "AuthorPublicationsByPublicationAuthorAuthorIdAndPublicationIdManyToManyConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [
          {
            "kind": "INTERFACE",
            "name": "Node",
            "ofType": null
          }
        ],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AuthorPublicationsByPublicationAuthorAuthorIdAndPublicationIdManyToManyConnection",
        "description": "A connection to a list of `Publication` values, with data from `PublicationAuthor`.",
        "fields": [
          {
            "name": "nodes",
            "description": "A list of `Publication` objects.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Publication",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges which contains the `Publication`, info from the `PublicationAuthor`, and the cursor to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "AuthorPublicationsByPublicationAuthorAuthorIdAndPublicationIdManyToManyEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalCount",
            "description": "The count of *all* `Publication` you could get from the connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AuthorPublicationsByPublicationAuthorAuthorIdAndPublicationIdManyToManyEdge",
        "description": "A `Publication` edge in the connection, with data from `PublicationAuthor`.",
        "fields": [
          {
            "name": "cursor",
            "description": "A cursor for use in pagination.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The `Publication` at the end of the edge.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PublicationAuthorsEdge",
        "description": "A `PublicationAuthor` edge in the connection.",
        "fields": [
          {
            "name": "cursor",
            "description": "A cursor for use in pagination.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The `PublicationAuthor` at the end of the edge.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "PublicationAuthor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PublicationAccountsByAnnotationPublicationIdAndAccountIdManyToManyConnection",
        "description": "A connection to a list of `Account` values, with data from `Annotation`.",
        "fields": [
          {
            "name": "nodes",
            "description": "A list of `Account` objects.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Account",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges which contains the `Account`, info from the `Annotation`, and the cursor to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "PublicationAccountsByAnnotationPublicationIdAndAccountIdManyToManyEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalCount",
            "description": "The count of *all* `Account` you could get from the connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PublicationAccountsByAnnotationPublicationIdAndAccountIdManyToManyEdge",
        "description": "A `Account` edge in the connection, with data from `Annotation`.",
        "fields": [
          {
            "name": "cursor",
            "description": "A cursor for use in pagination.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The `Account` at the end of the edge.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationsByAccountId",
            "description": "Reads and enables pagination through a set of `Annotation`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Annotation`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AnnotationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "AnnotationsConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "AuthorsOrderBy",
        "description": "Methods to use when ordering `Author`.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "NATURAL",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "AUTHOR_ID_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "AUTHOR_ID_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FULL_NAME_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FULL_NAME_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACCOUNT_ID_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ACCOUNT_ID_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_KEY_ASC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "PRIMARY_KEY_DESC",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorCondition",
        "description": "A condition to be used against `Author` object types. All fields are tested for equality and combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "authorId",
            "description": "Checks for equality with the object’s `authorId` field.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "fullName",
            "description": "Checks for equality with the object’s `fullName` field.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": "Checks for equality with the object’s `accountId` field.",
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorFilter",
        "description": "A filter to be used against `Author` object types. All fields are combined with a logical ‘and.’",
        "fields": null,
        "inputFields": [
          {
            "name": "authorId",
            "description": "Filter by the object’s `authorId` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "fullName",
            "description": "Filter by the object’s `fullName` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "StringFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": "Filter by the object’s `accountId` field.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "UUIDFilter",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "and",
            "description": "Checks for all expressions in this list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorFilter",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "or",
            "description": "Checks for any expressions in this list.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorFilter",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "not",
            "description": "Negates the expression.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorFilter",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PublicationAuthorsByPublicationAuthorPublicationIdAndAuthorIdManyToManyConnection",
        "description": "A connection to a list of `Author` values, with data from `PublicationAuthor`.",
        "fields": [
          {
            "name": "nodes",
            "description": "A list of `Author` objects.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Author",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges which contains the `Author`, info from the `PublicationAuthor`, and the cursor to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "PublicationAuthorsByPublicationAuthorPublicationIdAndAuthorIdManyToManyEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalCount",
            "description": "The count of *all* `Author` you could get from the connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PublicationAuthorsByPublicationAuthorPublicationIdAndAuthorIdManyToManyEdge",
        "description": "A `Author` edge in the connection, with data from `PublicationAuthor`.",
        "fields": [
          {
            "name": "cursor",
            "description": "A cursor for use in pagination.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The `Author` at the end of the edge.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Author",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "PublicationsEdge",
        "description": "A `Publication` edge in the connection.",
        "fields": [
          {
            "name": "cursor",
            "description": "A cursor for use in pagination.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The `Publication` at the end of the edge.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AuthorsConnection",
        "description": "A connection to a list of `Author` values.",
        "fields": [
          {
            "name": "nodes",
            "description": "A list of `Author` objects.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Author",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges which contains the `Author` and cursor to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "AuthorsEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalCount",
            "description": "The count of *all* `Author` you could get from the connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AuthorsEdge",
        "description": "A `Author` edge in the connection.",
        "fields": [
          {
            "name": "cursor",
            "description": "A cursor for use in pagination.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The `Author` at the end of the edge.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Author",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TagsConnection",
        "description": "A connection to a list of `Tag` values.",
        "fields": [
          {
            "name": "nodes",
            "description": "A list of `Tag` objects.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Tag",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges which contains the `Tag` and cursor to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "TagsEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalCount",
            "description": "The count of *all* `Tag` you could get from the connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "TagsEdge",
        "description": "A `Tag` edge in the connection.",
        "fields": [
          {
            "name": "cursor",
            "description": "A cursor for use in pagination.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The `Tag` at the end of the edge.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Tag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AccountPublicationsByAnnotationAccountIdAndPublicationIdManyToManyConnection",
        "description": "A connection to a list of `Publication` values, with data from `Annotation`.",
        "fields": [
          {
            "name": "nodes",
            "description": "A list of `Publication` objects.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Publication",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges which contains the `Publication`, info from the `Annotation`, and the cursor to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "AccountPublicationsByAnnotationAccountIdAndPublicationIdManyToManyEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalCount",
            "description": "The count of *all* `Publication` you could get from the connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AccountPublicationsByAnnotationAccountIdAndPublicationIdManyToManyEdge",
        "description": "A `Publication` edge in the connection, with data from `Annotation`.",
        "fields": [
          {
            "name": "cursor",
            "description": "A cursor for use in pagination.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The `Publication` at the end of the edge.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationsByPublicationId",
            "description": "Reads and enables pagination through a set of `Annotation`.",
            "args": [
              {
                "name": "first",
                "description": "Only read the first `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "last",
                "description": "Only read the last `n` values of the set.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "offset",
                "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "before",
                "description": "Read all values in the set before (above) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "after",
                "description": "Read all values in the set after (below) this cursor.",
                "type": {
                  "kind": "SCALAR",
                  "name": "Cursor",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Annotation`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AnnotationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              },
              {
                "name": "condition",
                "description": "A condition to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationCondition",
                  "ofType": null
                },
                "defaultValue": null
              },
              {
                "name": "filter",
                "description": "A filter to be used in determining which values should be returned by the collection.",
                "type": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationFilter",
                  "ofType": null
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "AnnotationsConnection",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AccountsEdge",
        "description": "A `Account` edge in the connection.",
        "fields": [
          {
            "name": "cursor",
            "description": "A cursor for use in pagination.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The `Account` at the end of the edge.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "AccountTagAnnotationsOrderBy",
        "description": "Methods to use when ordering `AccountTagAnnotation`.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "NATURAL",
            "description": null,
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AccountTagAnnotationsConnection",
        "description": "A connection to a list of `AccountTagAnnotation` values.",
        "fields": [
          {
            "name": "nodes",
            "description": "A list of `AccountTagAnnotation` objects.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "AccountTagAnnotation",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "edges",
            "description": "A list of edges which contains the `AccountTagAnnotation` and cursor to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "AccountTagAnnotationsEdge",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "pageInfo",
            "description": "Information to aid in pagination.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "PageInfo",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "totalCount",
            "description": "The count of *all* `AccountTagAnnotation` you could get from the connection.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AccountTagAnnotation",
        "description": null,
        "fields": [
          {
            "name": "accountId",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationId",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tagId",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "AccountTagAnnotationsEdge",
        "description": "A `AccountTagAnnotation` edge in the connection.",
        "fields": [
          {
            "name": "cursor",
            "description": "A cursor for use in pagination.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "Cursor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "node",
            "description": "The `AccountTagAnnotation` at the end of the edge.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "AccountTagAnnotation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "Mutation",
        "description": "The root mutation type which contains root level fields which mutate data.",
        "fields": [
          {
            "name": "createAccount",
            "description": "Creates a single `Account`.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CreateAccountInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "CreateAccountPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createAnnotation",
            "description": "Creates a single `Annotation`.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CreateAnnotationInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "CreateAnnotationPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createAnnotationTag",
            "description": "Creates a single `AnnotationTag`.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CreateAnnotationTagInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "CreateAnnotationTagPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createAuthor",
            "description": "Creates a single `Author`.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CreateAuthorInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "CreateAuthorPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createBook",
            "description": "Creates a single `Book`.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CreateBookInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "CreateBookPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createPublication",
            "description": "Creates a single `Publication`.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CreatePublicationInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "CreatePublicationPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createPublicationAuthor",
            "description": "Creates a single `PublicationAuthor`.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CreatePublicationAuthorInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "CreatePublicationAuthorPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "createTag",
            "description": "Creates a single `Tag`.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "CreateTagInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "CreateTagPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateAccount",
            "description": "Updates a single `Account` using its globally unique id and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateAccountInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateAccountPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateAccountByAccountId",
            "description": "Updates a single `Account` using a unique key and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateAccountByAccountIdInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateAccountPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateAccountByEmail",
            "description": "Updates a single `Account` using a unique key and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateAccountByEmailInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateAccountPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateAnnotation",
            "description": "Updates a single `Annotation` using its globally unique id and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateAnnotationInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateAnnotationPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateAnnotationByAnnotationId",
            "description": "Updates a single `Annotation` using a unique key and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateAnnotationByAnnotationIdInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateAnnotationPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateAnnotationByPublicationIdAndAccountIdAndHighlightLocationAndHighlightText",
            "description": "Updates a single `Annotation` using a unique key and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateAnnotationByPublicationIdAndAccountIdAndHighlightLocationAndHighlightTextInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateAnnotationPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateAnnotationByPublicationIdAndAccountIdAndNoteLocationAndNoteText",
            "description": "Updates a single `Annotation` using a unique key and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateAnnotationByPublicationIdAndAccountIdAndNoteLocationAndNoteTextInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateAnnotationPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateAnnotationTag",
            "description": "Updates a single `AnnotationTag` using its globally unique id and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateAnnotationTagInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateAnnotationTagPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateAnnotationTagByAnnotationIdAndTagId",
            "description": "Updates a single `AnnotationTag` using a unique key and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateAnnotationTagByAnnotationIdAndTagIdInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateAnnotationTagPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateAuthor",
            "description": "Updates a single `Author` using its globally unique id and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateAuthorInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateAuthorPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateAuthorByAuthorId",
            "description": "Updates a single `Author` using a unique key and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateAuthorByAuthorIdInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateAuthorPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateAuthorByFullName",
            "description": "Updates a single `Author` using a unique key and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateAuthorByFullNameInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateAuthorPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateAuthorByAccountIdAndFullName",
            "description": "Updates a single `Author` using a unique key and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateAuthorByAccountIdAndFullNameInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateAuthorPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateBook",
            "description": "Updates a single `Book` using its globally unique id and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateBookInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateBookPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateBookByPublicationId",
            "description": "Updates a single `Book` using a unique key and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateBookByPublicationIdInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateBookPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updatePublication",
            "description": "Updates a single `Publication` using its globally unique id and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdatePublicationInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdatePublicationPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updatePublicationByPublicationId",
            "description": "Updates a single `Publication` using a unique key and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdatePublicationByPublicationIdInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdatePublicationPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updatePublicationByAccountIdAndTitle",
            "description": "Updates a single `Publication` using a unique key and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdatePublicationByAccountIdAndTitleInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdatePublicationPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updatePublicationAuthor",
            "description": "Updates a single `PublicationAuthor` using its globally unique id and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdatePublicationAuthorInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdatePublicationAuthorPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updatePublicationAuthorByPublicationIdAndAuthorId",
            "description": "Updates a single `PublicationAuthor` using a unique key and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdatePublicationAuthorByPublicationIdAndAuthorIdInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdatePublicationAuthorPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateTag",
            "description": "Updates a single `Tag` using its globally unique id and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateTagInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateTagPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateTagByTagId",
            "description": "Updates a single `Tag` using a unique key and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateTagByTagIdInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateTagPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "updateTagByAccountIdAndTagName",
            "description": "Updates a single `Tag` using a unique key and a patch.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpdateTagByAccountIdAndTagNameInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "UpdateTagPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteAccount",
            "description": "Deletes a single `Account` using its globally unique id.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteAccountInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteAccountPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteAccountByAccountId",
            "description": "Deletes a single `Account` using a unique key.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteAccountByAccountIdInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteAccountPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteAccountByEmail",
            "description": "Deletes a single `Account` using a unique key.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteAccountByEmailInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteAccountPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteAnnotation",
            "description": "Deletes a single `Annotation` using its globally unique id.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteAnnotationInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteAnnotationPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteAnnotationByAnnotationId",
            "description": "Deletes a single `Annotation` using a unique key.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteAnnotationByAnnotationIdInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteAnnotationPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteAnnotationByPublicationIdAndAccountIdAndHighlightLocationAndHighlightText",
            "description": "Deletes a single `Annotation` using a unique key.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteAnnotationByPublicationIdAndAccountIdAndHighlightLocationAndHighlightTextInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteAnnotationPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteAnnotationByPublicationIdAndAccountIdAndNoteLocationAndNoteText",
            "description": "Deletes a single `Annotation` using a unique key.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteAnnotationByPublicationIdAndAccountIdAndNoteLocationAndNoteTextInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteAnnotationPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteAnnotationTag",
            "description": "Deletes a single `AnnotationTag` using its globally unique id.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteAnnotationTagInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteAnnotationTagPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteAnnotationTagByAnnotationIdAndTagId",
            "description": "Deletes a single `AnnotationTag` using a unique key.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteAnnotationTagByAnnotationIdAndTagIdInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteAnnotationTagPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteAuthor",
            "description": "Deletes a single `Author` using its globally unique id.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteAuthorInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteAuthorPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteAuthorByAuthorId",
            "description": "Deletes a single `Author` using a unique key.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteAuthorByAuthorIdInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteAuthorPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteAuthorByFullName",
            "description": "Deletes a single `Author` using a unique key.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteAuthorByFullNameInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteAuthorPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteAuthorByAccountIdAndFullName",
            "description": "Deletes a single `Author` using a unique key.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteAuthorByAccountIdAndFullNameInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteAuthorPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteBook",
            "description": "Deletes a single `Book` using its globally unique id.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteBookInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteBookPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteBookByPublicationId",
            "description": "Deletes a single `Book` using a unique key.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteBookByPublicationIdInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteBookPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deletePublication",
            "description": "Deletes a single `Publication` using its globally unique id.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeletePublicationInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeletePublicationPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deletePublicationByPublicationId",
            "description": "Deletes a single `Publication` using a unique key.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeletePublicationByPublicationIdInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeletePublicationPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deletePublicationByAccountIdAndTitle",
            "description": "Deletes a single `Publication` using a unique key.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeletePublicationByAccountIdAndTitleInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeletePublicationPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deletePublicationAuthor",
            "description": "Deletes a single `PublicationAuthor` using its globally unique id.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeletePublicationAuthorInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeletePublicationAuthorPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deletePublicationAuthorByPublicationIdAndAuthorId",
            "description": "Deletes a single `PublicationAuthor` using a unique key.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeletePublicationAuthorByPublicationIdAndAuthorIdInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeletePublicationAuthorPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteTag",
            "description": "Deletes a single `Tag` using its globally unique id.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteTagInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteTagPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteTagByTagId",
            "description": "Deletes a single `Tag` using a unique key.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteTagByTagIdInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteTagPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deleteTagByAccountIdAndTagName",
            "description": "Deletes a single `Tag` using a unique key.",
            "args": [
              {
                "name": "input",
                "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                "type": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "DeleteTagByAccountIdAndTagNameInput",
                    "ofType": null
                  }
                },
                "defaultValue": null
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "DeleteTagPayload",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "CreateAccountInput",
        "description": "All input for the create `Account` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "account",
            "description": "The `Account` to be created by this mutation.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AccountInput",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountInput",
        "description": "An input for mutations affecting `Account`",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "status",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "emailVerified",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "group",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "firstName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lastName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAccountIdFkeyInverseInput",
        "description": "Input for the nested mutation of `publication` in the `AccountInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "deleteOthers",
            "description": "Flag indicating whether all other `publication` records that match this relationship should be removed.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByPublicationId",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationPublicationPkeyConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectByAccountIdAndTitle",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationPublicationAccountIdTitleKeyConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationNodeIdConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByPublicationId",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationPublicationPkeyDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAccountIdAndTitle",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationPublicationAccountIdTitleKeyDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationNodeIdDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByPublicationId",
            "description": "The primary key(s) and patch data for `publication` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationOnPublicationForPublicationAccountIdFkeyUsingPublicationPkeyUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByAccountIdAndTitle",
            "description": "The primary key(s) and patch data for `publication` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationOnPublicationForPublicationAccountIdFkeyUsingPublicationAccountIdTitleKeyUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `publication` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AccountOnPublicationForPublicationAccountIdFkeyNodeIdUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `PublicationInput` object that will be created and connected to this object.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAccountIdFkeyPublicationCreateInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationPublicationPkeyConnect",
        "description": "The fields on `publication` to look up the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationPublicationAccountIdTitleKeyConnect",
        "description": "The fields on `publication` to look up the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationNodeIdConnect",
        "description": "The globally unique `ID` look up for the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `publication` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationPublicationPkeyDelete",
        "description": "The fields on `publication` to look up the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationPublicationAccountIdTitleKeyDelete",
        "description": "The fields on `publication` to look up the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationNodeIdDelete",
        "description": "The globally unique `ID` look up for the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `publication` to be deleted.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationOnPublicationForPublicationAccountIdFkeyUsingPublicationPkeyUpdate",
        "description": "The fields on `publication` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationPatch",
            "description": "An object where the defined keys will be set on the `publication` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updatePublicationOnPublicationForPublicationAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updatePublicationOnPublicationForPublicationAccountIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `publication` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "additionalMeta",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAccountIdFkeyInput",
        "description": "Input for the nested mutation of `account` in the `PublicationInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "connectByAccountId",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountAccountPkeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByEmail",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountAccountEmailKeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountNodeIdConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAccountId",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountAccountPkeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByEmail",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountAccountEmailKeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountNodeIdDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByAccountId",
            "description": "The primary key(s) and patch data for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountOnPublicationForPublicationAccountIdFkeyUsingAccountPkeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByEmail",
            "description": "The primary key(s) and patch data for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountOnPublicationForPublicationAccountIdFkeyUsingAccountEmailKeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationOnPublicationForPublicationAccountIdFkeyNodeIdUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `AccountInput` object that will be created and connected to this object.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyAccountCreateInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountAccountPkeyConnect",
        "description": "The fields on `account` to look up the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountAccountEmailKeyConnect",
        "description": "The fields on `account` to look up the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountNodeIdConnect",
        "description": "The globally unique `ID` look up for the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `account` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountAccountPkeyDelete",
        "description": "The fields on `account` to look up the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountAccountEmailKeyDelete",
        "description": "The fields on `account` to look up the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountNodeIdDelete",
        "description": "The globally unique `ID` look up for the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `account` to be deleted.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountOnPublicationForPublicationAccountIdFkeyUsingAccountPkeyUpdate",
        "description": "The fields on `account` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountPatch",
            "description": "An object where the defined keys will be set on the `account` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAccountOnPublicationForPublicationAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updateAccountOnPublicationForPublicationAccountIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `account` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "status",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "emailVerified",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "group",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "firstName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lastName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationAccountIdFkeyInverseInput",
        "description": "Input for the nested mutation of `annotation` in the `AccountInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "deleteOthers",
            "description": "Flag indicating whether all other `annotation` records that match this relationship should be removed.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByAnnotationId",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationAnnotationPkeyConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectByPublicationIdAndAccountIdAndHighlightLocationAndHighlightText",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationNoDuplicateHighlightsConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectByPublicationIdAndAccountIdAndNoteLocationAndNoteText",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationNoDuplicateNotesConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationNodeIdConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAnnotationId",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationAnnotationPkeyDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByPublicationIdAndAccountIdAndHighlightLocationAndHighlightText",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationNoDuplicateHighlightsDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByPublicationIdAndAccountIdAndNoteLocationAndNoteText",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationNoDuplicateNotesDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationNodeIdDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByAnnotationId",
            "description": "The primary key(s) and patch data for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationOnAnnotationForAnnotationAccountIdFkeyUsingAnnotationPkeyUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByPublicationIdAndAccountIdAndHighlightLocationAndHighlightText",
            "description": "The primary key(s) and patch data for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationOnAnnotationForAnnotationAccountIdFkeyUsingNoDuplicateHighlightsUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByPublicationIdAndAccountIdAndNoteLocationAndNoteText",
            "description": "The primary key(s) and patch data for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationOnAnnotationForAnnotationAccountIdFkeyUsingNoDuplicateNotesUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AccountOnAnnotationForAnnotationAccountIdFkeyNodeIdUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `AnnotationInput` object that will be created and connected to this object.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationAccountIdFkeyAnnotationCreateInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationAnnotationPkeyConnect",
        "description": "The fields on `annotation` to look up the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationNoDuplicateHighlightsConnect",
        "description": "The fields on `annotation` to look up the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "highlightLocation",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "highlightText",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationNoDuplicateNotesConnect",
        "description": "The fields on `annotation` to look up the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "noteLocation",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "noteText",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationNodeIdConnect",
        "description": "The globally unique `ID` look up for the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `annotation` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationAnnotationPkeyDelete",
        "description": "The fields on `annotation` to look up the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationNoDuplicateHighlightsDelete",
        "description": "The fields on `annotation` to look up the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "highlightLocation",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "highlightText",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationNoDuplicateNotesDelete",
        "description": "The fields on `annotation` to look up the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "noteLocation",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "noteText",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationNodeIdDelete",
        "description": "The globally unique `ID` look up for the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `annotation` to be deleted.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationOnAnnotationForAnnotationAccountIdFkeyUsingAnnotationPkeyUpdate",
        "description": "The fields on `annotation` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationPatch",
            "description": "An object where the defined keys will be set on the `annotation` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAnnotationOnAnnotationForAnnotationAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updateAnnotationOnAnnotationForAnnotationAccountIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `annotation` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "color",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "highlightLocation",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "highlightText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "noteText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "noteLocation",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "recordedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "editedHighlightText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "extraEdits",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tsv",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "FullText",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagsUsingAnnotationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagAnnotationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationPublicationIdFkeyInput",
        "description": "Input for the nested mutation of `publication` in the `AnnotationInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "connectByPublicationId",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationPublicationPkeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByAccountIdAndTitle",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationPublicationAccountIdTitleKeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationNodeIdConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByPublicationId",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationPublicationPkeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAccountIdAndTitle",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationPublicationAccountIdTitleKeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationNodeIdDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByPublicationId",
            "description": "The primary key(s) and patch data for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationOnAnnotationForAnnotationPublicationIdFkeyUsingPublicationPkeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByAccountIdAndTitle",
            "description": "The primary key(s) and patch data for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationOnAnnotationForAnnotationPublicationIdFkeyUsingPublicationAccountIdTitleKeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationOnAnnotationForAnnotationPublicationIdFkeyNodeIdUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `PublicationInput` object that will be created and connected to this object.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyPublicationCreateInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationOnAnnotationForAnnotationPublicationIdFkeyUsingPublicationPkeyUpdate",
        "description": "The fields on `publication` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationPatch",
            "description": "An object where the defined keys will be set on the `publication` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updatePublicationOnAnnotationForAnnotationPublicationIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updatePublicationOnAnnotationForAnnotationPublicationIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `publication` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "additionalMeta",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BookPublicationIdFkeyInverseInput",
        "description": "Input for the nested mutation of `book` in the `PublicationInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "deleteOthers",
            "description": "Flag indicating whether all other `book` records that match this relationship should be removed.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByPublicationId",
            "description": "The primary key(s) for `book` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookBookPkeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `book` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookNodeIdConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByPublicationId",
            "description": "The primary key(s) for `book` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookBookPkeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `book` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookNodeIdDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByPublicationId",
            "description": "The primary key(s) and patch data for `book` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookOnBookForBookPublicationIdFkeyUsingBookPkeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `book` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationOnBookForBookPublicationIdFkeyNodeIdUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `BookInput` object that will be created and connected to this object.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "BookPublicationIdFkeyBookCreateInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BookBookPkeyConnect",
        "description": "The fields on `book` to look up the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BookNodeIdConnect",
        "description": "The globally unique `ID` look up for the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `book` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BookBookPkeyDelete",
        "description": "The fields on `book` to look up the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BookNodeIdDelete",
        "description": "The globally unique `ID` look up for the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `book` to be deleted.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BookOnBookForBookPublicationIdFkeyUsingBookPkeyUpdate",
        "description": "The fields on `book` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "bookPatch",
            "description": "An object where the defined keys will be set on the `book` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateBookOnBookForBookPublicationIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updateBookOnBookForBookPublicationIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `book` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "isbn13",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookTitle",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "imageUrl",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "languageCode",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publisher",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationDate",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Date",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "description",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookType",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BookPublicationIdFkeyInput",
        "description": "Input for the nested mutation of `publication` in the `BookInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "connectByPublicationId",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationPublicationPkeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByAccountIdAndTitle",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationPublicationAccountIdTitleKeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationNodeIdConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByPublicationId",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationPublicationPkeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAccountIdAndTitle",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationPublicationAccountIdTitleKeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationNodeIdDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByPublicationId",
            "description": "The primary key(s) and patch data for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationOnBookForBookPublicationIdFkeyUsingPublicationPkeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByAccountIdAndTitle",
            "description": "The primary key(s) and patch data for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationOnBookForBookPublicationIdFkeyUsingPublicationAccountIdTitleKeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookOnBookForBookPublicationIdFkeyNodeIdUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `PublicationInput` object that will be created and connected to this object.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookPublicationIdFkeyPublicationCreateInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationOnBookForBookPublicationIdFkeyUsingPublicationPkeyUpdate",
        "description": "The fields on `publication` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationPatch",
            "description": "An object where the defined keys will be set on the `publication` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updatePublicationOnBookForBookPublicationIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updatePublicationOnBookForBookPublicationIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `publication` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "additionalMeta",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationPublicationIdFkeyInverseInput",
        "description": "Input for the nested mutation of `annotation` in the `PublicationInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "deleteOthers",
            "description": "Flag indicating whether all other `annotation` records that match this relationship should be removed.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByAnnotationId",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationAnnotationPkeyConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectByPublicationIdAndAccountIdAndHighlightLocationAndHighlightText",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationNoDuplicateHighlightsConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectByPublicationIdAndAccountIdAndNoteLocationAndNoteText",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationNoDuplicateNotesConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationNodeIdConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAnnotationId",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationAnnotationPkeyDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByPublicationIdAndAccountIdAndHighlightLocationAndHighlightText",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationNoDuplicateHighlightsDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByPublicationIdAndAccountIdAndNoteLocationAndNoteText",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationNoDuplicateNotesDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationNodeIdDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByAnnotationId",
            "description": "The primary key(s) and patch data for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationOnAnnotationForAnnotationPublicationIdFkeyUsingAnnotationPkeyUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByPublicationIdAndAccountIdAndHighlightLocationAndHighlightText",
            "description": "The primary key(s) and patch data for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationOnAnnotationForAnnotationPublicationIdFkeyUsingNoDuplicateHighlightsUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByPublicationIdAndAccountIdAndNoteLocationAndNoteText",
            "description": "The primary key(s) and patch data for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationOnAnnotationForAnnotationPublicationIdFkeyUsingNoDuplicateNotesUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationOnAnnotationForAnnotationPublicationIdFkeyNodeIdUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `AnnotationInput` object that will be created and connected to this object.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationPublicationIdFkeyAnnotationCreateInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationOnAnnotationForAnnotationPublicationIdFkeyUsingAnnotationPkeyUpdate",
        "description": "The fields on `annotation` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationPatch",
            "description": "An object where the defined keys will be set on the `annotation` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAnnotationOnAnnotationForAnnotationPublicationIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updateAnnotationOnAnnotationForAnnotationPublicationIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `annotation` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "color",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "highlightLocation",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "highlightText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "noteText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "noteLocation",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "recordedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "editedHighlightText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "extraEdits",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tsv",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "FullText",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagsUsingAnnotationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagAnnotationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationAccountIdFkeyInput",
        "description": "Input for the nested mutation of `account` in the `AnnotationInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "connectByAccountId",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountAccountPkeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByEmail",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountAccountEmailKeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountNodeIdConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAccountId",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountAccountPkeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByEmail",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountAccountEmailKeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountNodeIdDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByAccountId",
            "description": "The primary key(s) and patch data for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountOnAnnotationForAnnotationAccountIdFkeyUsingAccountPkeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByEmail",
            "description": "The primary key(s) and patch data for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountOnAnnotationForAnnotationAccountIdFkeyUsingAccountEmailKeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationOnAnnotationForAnnotationAccountIdFkeyNodeIdUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `AccountInput` object that will be created and connected to this object.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyAccountCreateInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountOnAnnotationForAnnotationAccountIdFkeyUsingAccountPkeyUpdate",
        "description": "The fields on `account` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountPatch",
            "description": "An object where the defined keys will be set on the `account` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAccountOnAnnotationForAnnotationAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updateAccountOnAnnotationForAnnotationAccountIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `account` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "status",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "emailVerified",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "group",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "firstName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lastName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorAccountIdFkeyInverseInput",
        "description": "Input for the nested mutation of `author` in the `AccountInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "deleteOthers",
            "description": "Flag indicating whether all other `author` records that match this relationship should be removed.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByAuthorId",
            "description": "The primary key(s) for `author` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorAuthorPkeyConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectByFullName",
            "description": "The primary key(s) for `author` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorAuthorFullNameKeyConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectByAccountIdAndFullName",
            "description": "The primary key(s) for `author` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorNoDuplicateAuthorsPerAccountConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `author` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorNodeIdConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAuthorId",
            "description": "The primary key(s) for `author` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorAuthorPkeyDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByFullName",
            "description": "The primary key(s) for `author` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorAuthorFullNameKeyDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAccountIdAndFullName",
            "description": "The primary key(s) for `author` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorNoDuplicateAuthorsPerAccountDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `author` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorNodeIdDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByAuthorId",
            "description": "The primary key(s) and patch data for `author` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorOnAuthorForAuthorAccountIdFkeyUsingAuthorPkeyUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByFullName",
            "description": "The primary key(s) and patch data for `author` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorOnAuthorForAuthorAccountIdFkeyUsingAuthorFullNameKeyUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByAccountIdAndFullName",
            "description": "The primary key(s) and patch data for `author` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorOnAuthorForAuthorAccountIdFkeyUsingNoDuplicateAuthorsPerAccountUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `author` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AccountOnAuthorForAuthorAccountIdFkeyNodeIdUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `AuthorInput` object that will be created and connected to this object.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorAccountIdFkeyAuthorCreateInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorAuthorPkeyConnect",
        "description": "The fields on `author` to look up the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorAuthorFullNameKeyConnect",
        "description": "The fields on `author` to look up the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorNoDuplicateAuthorsPerAccountConnect",
        "description": "The fields on `author` to look up the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorNodeIdConnect",
        "description": "The globally unique `ID` look up for the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `author` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorAuthorPkeyDelete",
        "description": "The fields on `author` to look up the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorAuthorFullNameKeyDelete",
        "description": "The fields on `author` to look up the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorNoDuplicateAuthorsPerAccountDelete",
        "description": "The fields on `author` to look up the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorNodeIdDelete",
        "description": "The globally unique `ID` look up for the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `author` to be deleted.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorOnAuthorForAuthorAccountIdFkeyUsingAuthorPkeyUpdate",
        "description": "The fields on `author` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "authorPatch",
            "description": "An object where the defined keys will be set on the `author` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAuthorOnAuthorForAuthorAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updateAuthorOnAuthorForAuthorAccountIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `author` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorsUsingAuthorId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorAuthorIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorAccountIdFkeyInput",
        "description": "Input for the nested mutation of `account` in the `AuthorInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "connectByAccountId",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountAccountPkeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByEmail",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountAccountEmailKeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountNodeIdConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAccountId",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountAccountPkeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByEmail",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountAccountEmailKeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountNodeIdDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByAccountId",
            "description": "The primary key(s) and patch data for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountOnAuthorForAuthorAccountIdFkeyUsingAccountPkeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByEmail",
            "description": "The primary key(s) and patch data for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountOnAuthorForAuthorAccountIdFkeyUsingAccountEmailKeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorOnAuthorForAuthorAccountIdFkeyNodeIdUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `AccountInput` object that will be created and connected to this object.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyAccountCreateInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountOnAuthorForAuthorAccountIdFkeyUsingAccountPkeyUpdate",
        "description": "The fields on `account` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountPatch",
            "description": "An object where the defined keys will be set on the `account` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAccountOnAuthorForAuthorAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updateAccountOnAuthorForAuthorAccountIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `account` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "status",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "emailVerified",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "group",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "firstName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lastName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagAccountIdFkeyInverseInput",
        "description": "Input for the nested mutation of `tag` in the `AccountInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "deleteOthers",
            "description": "Flag indicating whether all other `tag` records that match this relationship should be removed.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByTagId",
            "description": "The primary key(s) for `tag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagTagPkeyConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectByAccountIdAndTagName",
            "description": "The primary key(s) for `tag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagNoDuplicateTagsPerAccountConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `tag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagNodeIdConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByTagId",
            "description": "The primary key(s) for `tag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagTagPkeyDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAccountIdAndTagName",
            "description": "The primary key(s) for `tag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagNoDuplicateTagsPerAccountDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `tag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagNodeIdDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByTagId",
            "description": "The primary key(s) and patch data for `tag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagOnTagForTagAccountIdFkeyUsingTagPkeyUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByAccountIdAndTagName",
            "description": "The primary key(s) and patch data for `tag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagOnTagForTagAccountIdFkeyUsingNoDuplicateTagsPerAccountUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `tag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AccountOnTagForTagAccountIdFkeyNodeIdUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `TagInput` object that will be created and connected to this object.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagAccountIdFkeyTagCreateInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagTagPkeyConnect",
        "description": "The fields on `tag` to look up the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagNoDuplicateTagsPerAccountConnect",
        "description": "The fields on `tag` to look up the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagNodeIdConnect",
        "description": "The globally unique `ID` look up for the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `tag` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagTagPkeyDelete",
        "description": "The fields on `tag` to look up the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagNoDuplicateTagsPerAccountDelete",
        "description": "The fields on `tag` to look up the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagNodeIdDelete",
        "description": "The globally unique `ID` look up for the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `tag` to be deleted.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagOnTagForTagAccountIdFkeyUsingTagPkeyUpdate",
        "description": "The fields on `tag` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "tagPatch",
            "description": "An object where the defined keys will be set on the `tag` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateTagOnTagForTagAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updateTagOnTagForTagAccountIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `tag` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagsUsingTagId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagTagIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagAccountIdFkeyInput",
        "description": "Input for the nested mutation of `account` in the `TagInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "connectByAccountId",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountAccountPkeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByEmail",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountAccountEmailKeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountNodeIdConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAccountId",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountAccountPkeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByEmail",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountAccountEmailKeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountNodeIdDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByAccountId",
            "description": "The primary key(s) and patch data for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountOnTagForTagAccountIdFkeyUsingAccountPkeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByEmail",
            "description": "The primary key(s) and patch data for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AccountOnTagForTagAccountIdFkeyUsingAccountEmailKeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `account` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagOnTagForTagAccountIdFkeyNodeIdUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `AccountInput` object that will be created and connected to this object.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyAccountCreateInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountOnTagForTagAccountIdFkeyUsingAccountPkeyUpdate",
        "description": "The fields on `account` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountPatch",
            "description": "An object where the defined keys will be set on the `account` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAccountOnTagForTagAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updateAccountOnTagForTagAccountIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `account` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "status",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "emailVerified",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "group",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "firstName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lastName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountOnTagForTagAccountIdFkeyUsingAccountEmailKeyUpdate",
        "description": "The fields on `account` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountPatch",
            "description": "An object where the defined keys will be set on the `account` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAccountOnTagForTagAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagOnTagForTagAccountIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `account` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountPatch",
            "description": "An object where the defined keys will be set on the `account` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AccountPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountPatch",
        "description": "Represents an update to a `Account`. Fields that are set will be updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "status",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "emailVerified",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "group",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "firstName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lastName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagAccountIdFkeyAccountCreateInput",
        "description": "The `account` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "status",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "emailVerified",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "group",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "firstName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lastName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagTagIdFkeyInverseInput",
        "description": "Input for the nested mutation of `annotationTag` in the `TagInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "deleteOthers",
            "description": "Flag indicating whether all other `annotationTag` records that match this relationship should be removed.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByAnnotationIdAndTagId",
            "description": "The primary key(s) for `annotationTag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagAnnotationTagPkeyConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `annotationTag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagNodeIdConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAnnotationIdAndTagId",
            "description": "The primary key(s) for `annotationTag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagAnnotationTagPkeyDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `annotationTag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagNodeIdDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByAnnotationIdAndTagId",
            "description": "The primary key(s) and patch data for `annotationTag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagOnAnnotationTagForAnnotationTagTagIdFkeyUsingAnnotationTagPkeyUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `annotationTag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "TagOnAnnotationTagForAnnotationTagTagIdFkeyNodeIdUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `AnnotationTagInput` object that will be created and connected to this object.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagTagIdFkeyAnnotationTagCreateInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagAnnotationTagPkeyConnect",
        "description": "The fields on `annotationTag` to look up the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagNodeIdConnect",
        "description": "The globally unique `ID` look up for the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `annotationTag` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagAnnotationTagPkeyDelete",
        "description": "The fields on `annotationTag` to look up the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagNodeIdDelete",
        "description": "The globally unique `ID` look up for the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `annotationTag` to be deleted.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagOnAnnotationTagForAnnotationTagTagIdFkeyUsingAnnotationTagPkeyUpdate",
        "description": "The fields on `annotationTag` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationTagPatch",
            "description": "An object where the defined keys will be set on the `annotationTag` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAnnotationTagOnAnnotationTagForAnnotationTagTagIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updateAnnotationTagOnAnnotationTagForAnnotationTagTagIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `annotationTag` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationToAnnotationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagAnnotationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagToTagId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagTagIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagAnnotationIdFkeyInput",
        "description": "Input for the nested mutation of `annotation` in the `AnnotationTagInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "connectByAnnotationId",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAnnotationPkeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByPublicationIdAndAccountIdAndHighlightLocationAndHighlightText",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationNoDuplicateHighlightsConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByPublicationIdAndAccountIdAndNoteLocationAndNoteText",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationNoDuplicateNotesConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationNodeIdConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAnnotationId",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAnnotationPkeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByPublicationIdAndAccountIdAndHighlightLocationAndHighlightText",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationNoDuplicateHighlightsDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByPublicationIdAndAccountIdAndNoteLocationAndNoteText",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationNoDuplicateNotesDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationNodeIdDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByAnnotationId",
            "description": "The primary key(s) and patch data for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationOnAnnotationTagForAnnotationTagAnnotationIdFkeyUsingAnnotationPkeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByPublicationIdAndAccountIdAndHighlightLocationAndHighlightText",
            "description": "The primary key(s) and patch data for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationOnAnnotationTagForAnnotationTagAnnotationIdFkeyUsingNoDuplicateHighlightsUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByPublicationIdAndAccountIdAndNoteLocationAndNoteText",
            "description": "The primary key(s) and patch data for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationOnAnnotationTagForAnnotationTagAnnotationIdFkeyUsingNoDuplicateNotesUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `annotation` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagOnAnnotationTagForAnnotationTagAnnotationIdFkeyNodeIdUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `AnnotationInput` object that will be created and connected to this object.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagAnnotationIdFkeyAnnotationCreateInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationOnAnnotationTagForAnnotationTagAnnotationIdFkeyUsingAnnotationPkeyUpdate",
        "description": "The fields on `annotation` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationPatch",
            "description": "An object where the defined keys will be set on the `annotation` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAnnotationOnAnnotationTagForAnnotationTagAnnotationIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updateAnnotationOnAnnotationTagForAnnotationTagAnnotationIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `annotation` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "color",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "highlightLocation",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "highlightText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "noteText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "noteLocation",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "recordedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "editedHighlightText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "extraEdits",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tsv",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "FullText",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagsUsingAnnotationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagAnnotationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagAnnotationIdFkeyInverseInput",
        "description": "Input for the nested mutation of `annotationTag` in the `AnnotationInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "deleteOthers",
            "description": "Flag indicating whether all other `annotationTag` records that match this relationship should be removed.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByAnnotationIdAndTagId",
            "description": "The primary key(s) for `annotationTag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagAnnotationTagPkeyConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `annotationTag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagNodeIdConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAnnotationIdAndTagId",
            "description": "The primary key(s) for `annotationTag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagAnnotationTagPkeyDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `annotationTag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagNodeIdDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByAnnotationIdAndTagId",
            "description": "The primary key(s) and patch data for `annotationTag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagOnAnnotationTagForAnnotationTagAnnotationIdFkeyUsingAnnotationTagPkeyUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `annotationTag` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationOnAnnotationTagForAnnotationTagAnnotationIdFkeyNodeIdUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `AnnotationTagInput` object that will be created and connected to this object.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AnnotationTagAnnotationIdFkeyAnnotationTagCreateInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagOnAnnotationTagForAnnotationTagAnnotationIdFkeyUsingAnnotationTagPkeyUpdate",
        "description": "The fields on `annotationTag` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationTagPatch",
            "description": "An object where the defined keys will be set on the `annotationTag` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAnnotationTagOnAnnotationTagForAnnotationTagAnnotationIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updateAnnotationTagOnAnnotationTagForAnnotationTagAnnotationIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `annotationTag` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationToAnnotationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagAnnotationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagToTagId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagTagIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagTagIdFkeyInput",
        "description": "Input for the nested mutation of `tag` in the `AnnotationTagInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "connectByTagId",
            "description": "The primary key(s) for `tag` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagTagPkeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByAccountIdAndTagName",
            "description": "The primary key(s) for `tag` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagNoDuplicateTagsPerAccountConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `tag` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagNodeIdConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByTagId",
            "description": "The primary key(s) for `tag` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagTagPkeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAccountIdAndTagName",
            "description": "The primary key(s) for `tag` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagNoDuplicateTagsPerAccountDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `tag` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagNodeIdDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByTagId",
            "description": "The primary key(s) and patch data for `tag` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagOnAnnotationTagForAnnotationTagTagIdFkeyUsingTagPkeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByAccountIdAndTagName",
            "description": "The primary key(s) and patch data for `tag` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagOnAnnotationTagForAnnotationTagTagIdFkeyUsingNoDuplicateTagsPerAccountUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `tag` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagOnAnnotationTagForAnnotationTagTagIdFkeyNodeIdUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `TagInput` object that will be created and connected to this object.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagTagIdFkeyTagCreateInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagOnAnnotationTagForAnnotationTagTagIdFkeyUsingTagPkeyUpdate",
        "description": "The fields on `tag` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "tagPatch",
            "description": "An object where the defined keys will be set on the `tag` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateTagOnAnnotationTagForAnnotationTagTagIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updateTagOnAnnotationTagForAnnotationTagTagIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `tag` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "tagName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagsUsingTagId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagTagIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagOnAnnotationTagForAnnotationTagTagIdFkeyUsingNoDuplicateTagsPerAccountUpdate",
        "description": "The fields on `tag` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "tagPatch",
            "description": "An object where the defined keys will be set on the `tag` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateTagOnAnnotationTagForAnnotationTagTagIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagOnAnnotationTagForAnnotationTagTagIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `tag` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagPatch",
            "description": "An object where the defined keys will be set on the `tag` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "TagPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagPatch",
        "description": "Represents an update to a `Tag`. Fields that are set will be updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagsUsingTagId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagTagIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagTagIdFkeyTagCreateInput",
        "description": "The `tag` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "tagName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagsUsingTagId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagTagIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationOnAnnotationTagForAnnotationTagAnnotationIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `annotationTag` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagPatch",
            "description": "An object where the defined keys will be set on the `annotationTag` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AnnotationTagPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagPatch",
        "description": "Represents an update to a `AnnotationTag`. Fields that are set will be updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationToAnnotationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagAnnotationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagToTagId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagTagIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagAnnotationIdFkeyAnnotationTagCreateInput",
        "description": "The `annotationTag` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationToAnnotationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagAnnotationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagToTagId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagTagIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationOnAnnotationTagForAnnotationTagAnnotationIdFkeyUsingNoDuplicateHighlightsUpdate",
        "description": "The fields on `annotation` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationPatch",
            "description": "An object where the defined keys will be set on the `annotation` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAnnotationOnAnnotationTagForAnnotationTagAnnotationIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "highlightLocation",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "highlightText",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationOnAnnotationTagForAnnotationTagAnnotationIdFkeyUsingNoDuplicateNotesUpdate",
        "description": "The fields on `annotation` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationPatch",
            "description": "An object where the defined keys will be set on the `annotation` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAnnotationOnAnnotationTagForAnnotationTagAnnotationIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "noteLocation",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "noteText",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagOnAnnotationTagForAnnotationTagAnnotationIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `annotation` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "annotationPatch",
            "description": "An object where the defined keys will be set on the `annotation` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AnnotationPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationPatch",
        "description": "Represents an update to a `Annotation`. Fields that are set will be updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "color",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "highlightLocation",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "highlightText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "noteText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "noteLocation",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "recordedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "editedHighlightText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "extraEdits",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tsv",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "FullText",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagsUsingAnnotationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagAnnotationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagAnnotationIdFkeyAnnotationCreateInput",
        "description": "The `annotation` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "color",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "highlightLocation",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "highlightText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "noteText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "noteLocation",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "recordedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "editedHighlightText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "extraEdits",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tsv",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "FullText",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagsUsingAnnotationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagAnnotationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagOnAnnotationTagForAnnotationTagTagIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `annotationTag` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagPatch",
            "description": "An object where the defined keys will be set on the `annotationTag` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AnnotationTagPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagTagIdFkeyAnnotationTagCreateInput",
        "description": "The `annotationTag` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationToAnnotationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagAnnotationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagToTagId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagTagIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagOnTagForTagAccountIdFkeyUsingNoDuplicateTagsPerAccountUpdate",
        "description": "The fields on `tag` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "tagPatch",
            "description": "An object where the defined keys will be set on the `tag` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateTagOnTagForTagAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountOnTagForTagAccountIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `tag` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagPatch",
            "description": "An object where the defined keys will be set on the `tag` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "TagPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagAccountIdFkeyTagCreateInput",
        "description": "The `tag` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagsUsingTagId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagTagIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountOnAuthorForAuthorAccountIdFkeyUsingAccountEmailKeyUpdate",
        "description": "The fields on `account` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountPatch",
            "description": "An object where the defined keys will be set on the `account` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAccountOnAuthorForAuthorAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorOnAuthorForAuthorAccountIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `account` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountPatch",
            "description": "An object where the defined keys will be set on the `account` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AccountPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorAccountIdFkeyAccountCreateInput",
        "description": "The `account` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "status",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "emailVerified",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "group",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "firstName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lastName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorAuthorIdFkeyInverseInput",
        "description": "Input for the nested mutation of `publicationAuthor` in the `AuthorInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "deleteOthers",
            "description": "Flag indicating whether all other `publicationAuthor` records that match this relationship should be removed.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByPublicationIdAndAuthorId",
            "description": "The primary key(s) for `publicationAuthor` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorPublicationAuthorPkeyConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `publicationAuthor` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorNodeIdConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByPublicationIdAndAuthorId",
            "description": "The primary key(s) for `publicationAuthor` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorPublicationAuthorPkeyDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `publicationAuthor` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorNodeIdDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByPublicationIdAndAuthorId",
            "description": "The primary key(s) and patch data for `publicationAuthor` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyUsingPublicationAuthorPkeyUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `publicationAuthor` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyNodeIdUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `PublicationAuthorInput` object that will be created and connected to this object.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorAuthorIdFkeyPublicationAuthorCreateInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorPublicationAuthorPkeyConnect",
        "description": "The fields on `publicationAuthor` to look up the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorNodeIdConnect",
        "description": "The globally unique `ID` look up for the row to connect.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `publicationAuthor` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorPublicationAuthorPkeyDelete",
        "description": "The fields on `publicationAuthor` to look up the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorNodeIdDelete",
        "description": "The globally unique `ID` look up for the row to delete.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `publicationAuthor` to be deleted.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyUsingPublicationAuthorPkeyUpdate",
        "description": "The fields on `publicationAuthor` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationAuthorPatch",
            "description": "An object where the defined keys will be set on the `publicationAuthor` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updatePublicationAuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updatePublicationAuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `publicationAuthor` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorToAuthorId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorAuthorIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorPublicationIdFkeyInput",
        "description": "Input for the nested mutation of `publication` in the `PublicationAuthorInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "connectByPublicationId",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationPublicationPkeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByAccountIdAndTitle",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationPublicationAccountIdTitleKeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationNodeIdConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByPublicationId",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationPublicationPkeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAccountIdAndTitle",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationPublicationAccountIdTitleKeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationNodeIdDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByPublicationId",
            "description": "The primary key(s) and patch data for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationOnPublicationAuthorForPublicationAuthorPublicationIdFkeyUsingPublicationPkeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByAccountIdAndTitle",
            "description": "The primary key(s) and patch data for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationOnPublicationAuthorForPublicationAuthorPublicationIdFkeyUsingPublicationAccountIdTitleKeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `publication` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorOnPublicationAuthorForPublicationAuthorPublicationIdFkeyNodeIdUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `PublicationInput` object that will be created and connected to this object.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyPublicationCreateInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationOnPublicationAuthorForPublicationAuthorPublicationIdFkeyUsingPublicationPkeyUpdate",
        "description": "The fields on `publication` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationPatch",
            "description": "An object where the defined keys will be set on the `publication` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updatePublicationOnPublicationAuthorForPublicationAuthorPublicationIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updatePublicationOnPublicationAuthorForPublicationAuthorPublicationIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `publication` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "additionalMeta",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorPublicationIdFkeyInverseInput",
        "description": "Input for the nested mutation of `publicationAuthor` in the `PublicationInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "deleteOthers",
            "description": "Flag indicating whether all other `publicationAuthor` records that match this relationship should be removed.",
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByPublicationIdAndAuthorId",
            "description": "The primary key(s) for `publicationAuthor` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorPublicationAuthorPkeyConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `publicationAuthor` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorNodeIdConnect",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteByPublicationIdAndAuthorId",
            "description": "The primary key(s) for `publicationAuthor` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorPublicationAuthorPkeyDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `publicationAuthor` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorNodeIdDelete",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateByPublicationIdAndAuthorId",
            "description": "The primary key(s) and patch data for `publicationAuthor` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorOnPublicationAuthorForPublicationAuthorPublicationIdFkeyUsingPublicationAuthorPkeyUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `publicationAuthor` for the far side of the relationship.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationOnPublicationAuthorForPublicationAuthorPublicationIdFkeyNodeIdUpdate",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `PublicationAuthorInput` object that will be created and connected to this object.",
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "PublicationAuthorPublicationIdFkeyPublicationAuthorCreateInput",
                  "ofType": null
                }
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorOnPublicationAuthorForPublicationAuthorPublicationIdFkeyUsingPublicationAuthorPkeyUpdate",
        "description": "The fields on `publicationAuthor` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationAuthorPatch",
            "description": "An object where the defined keys will be set on the `publicationAuthor` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updatePublicationAuthorOnPublicationAuthorForPublicationAuthorPublicationIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updatePublicationAuthorOnPublicationAuthorForPublicationAuthorPublicationIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `publicationAuthor` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorToAuthorId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorAuthorIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorAuthorIdFkeyInput",
        "description": "Input for the nested mutation of `author` in the `PublicationAuthorInput` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "connectByAuthorId",
            "description": "The primary key(s) for `author` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAuthorPkeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByFullName",
            "description": "The primary key(s) for `author` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAuthorFullNameKeyConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectByAccountIdAndFullName",
            "description": "The primary key(s) for `author` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorNoDuplicateAuthorsPerAccountConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "connectById",
            "description": "The primary key(s) for `author` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorNodeIdConnect",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAuthorId",
            "description": "The primary key(s) for `author` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAuthorPkeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByFullName",
            "description": "The primary key(s) for `author` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAuthorFullNameKeyDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteByAccountIdAndFullName",
            "description": "The primary key(s) for `author` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorNoDuplicateAuthorsPerAccountDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "deleteById",
            "description": "The primary key(s) for `author` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorNodeIdDelete",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByAuthorId",
            "description": "The primary key(s) and patch data for `author` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyUsingAuthorPkeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByFullName",
            "description": "The primary key(s) and patch data for `author` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyUsingAuthorFullNameKeyUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateByAccountIdAndFullName",
            "description": "The primary key(s) and patch data for `author` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyUsingNoDuplicateAuthorsPerAccountUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updateById",
            "description": "The primary key(s) and patch data for `author` for the far side of the relationship.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyNodeIdUpdate",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "create",
            "description": "A `AuthorInput` object that will be created and connected to this object.",
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorAuthorIdFkeyAuthorCreateInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyUsingAuthorPkeyUpdate",
        "description": "The fields on `author` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "authorPatch",
            "description": "An object where the defined keys will be set on the `author` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "updateAuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyPatch",
        "description": "An object where the defined keys will be set on the `author` being updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorsUsingAuthorId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorAuthorIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyUsingAuthorFullNameKeyUpdate",
        "description": "The fields on `author` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "authorPatch",
            "description": "An object where the defined keys will be set on the `author` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyUsingNoDuplicateAuthorsPerAccountUpdate",
        "description": "The fields on `author` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "authorPatch",
            "description": "An object where the defined keys will be set on the `author` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `author` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "authorPatch",
            "description": "An object where the defined keys will be set on the `author` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AuthorPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorPatch",
        "description": "Represents an update to a `Author`. Fields that are set will be updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorsUsingAuthorId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorAuthorIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorAuthorIdFkeyAuthorCreateInput",
        "description": "The `author` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorsUsingAuthorId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorAuthorIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationOnPublicationAuthorForPublicationAuthorPublicationIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `publicationAuthor` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorPatch",
            "description": "An object where the defined keys will be set on the `publicationAuthor` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "PublicationAuthorPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorPatch",
        "description": "Represents an update to a `PublicationAuthor`. Fields that are set will be updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorToAuthorId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorAuthorIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorPublicationIdFkeyPublicationAuthorCreateInput",
        "description": "The `publicationAuthor` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorToAuthorId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorAuthorIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationOnPublicationAuthorForPublicationAuthorPublicationIdFkeyUsingPublicationAccountIdTitleKeyUpdate",
        "description": "The fields on `publication` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationPatch",
            "description": "An object where the defined keys will be set on the `publication` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updatePublicationOnPublicationAuthorForPublicationAuthorPublicationIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorOnPublicationAuthorForPublicationAuthorPublicationIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `publication` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationPatch",
            "description": "An object where the defined keys will be set on the `publication` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "PublicationPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationPatch",
        "description": "Represents an update to a `Publication`. Fields that are set will be updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "additionalMeta",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorPublicationIdFkeyPublicationCreateInput",
        "description": "The `publication` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "additionalMeta",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorOnPublicationAuthorForPublicationAuthorAuthorIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `publicationAuthor` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorPatch",
            "description": "An object where the defined keys will be set on the `publicationAuthor` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "PublicationAuthorPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorAuthorIdFkeyPublicationAuthorCreateInput",
        "description": "The `publicationAuthor` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorToAuthorId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorAuthorIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorOnAuthorForAuthorAccountIdFkeyUsingAuthorFullNameKeyUpdate",
        "description": "The fields on `author` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "authorPatch",
            "description": "An object where the defined keys will be set on the `author` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAuthorOnAuthorForAuthorAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorOnAuthorForAuthorAccountIdFkeyUsingNoDuplicateAuthorsPerAccountUpdate",
        "description": "The fields on `author` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "authorPatch",
            "description": "An object where the defined keys will be set on the `author` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAuthorOnAuthorForAuthorAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountOnAuthorForAuthorAccountIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `author` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "authorPatch",
            "description": "An object where the defined keys will be set on the `author` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AuthorPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorAccountIdFkeyAuthorCreateInput",
        "description": "The `author` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorsUsingAuthorId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorAuthorIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountOnAnnotationForAnnotationAccountIdFkeyUsingAccountEmailKeyUpdate",
        "description": "The fields on `account` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountPatch",
            "description": "An object where the defined keys will be set on the `account` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAccountOnAnnotationForAnnotationAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationOnAnnotationForAnnotationAccountIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `account` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountPatch",
            "description": "An object where the defined keys will be set on the `account` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AccountPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationAccountIdFkeyAccountCreateInput",
        "description": "The `account` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "status",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "emailVerified",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "group",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "firstName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lastName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationOnAnnotationForAnnotationPublicationIdFkeyUsingNoDuplicateHighlightsUpdate",
        "description": "The fields on `annotation` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationPatch",
            "description": "An object where the defined keys will be set on the `annotation` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAnnotationOnAnnotationForAnnotationPublicationIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "highlightLocation",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "highlightText",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationOnAnnotationForAnnotationPublicationIdFkeyUsingNoDuplicateNotesUpdate",
        "description": "The fields on `annotation` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationPatch",
            "description": "An object where the defined keys will be set on the `annotation` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAnnotationOnAnnotationForAnnotationPublicationIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "noteLocation",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "noteText",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationOnAnnotationForAnnotationPublicationIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `annotation` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "annotationPatch",
            "description": "An object where the defined keys will be set on the `annotation` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AnnotationPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationPublicationIdFkeyAnnotationCreateInput",
        "description": "The `annotation` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "color",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "highlightLocation",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "highlightText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "noteText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "noteLocation",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "recordedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "editedHighlightText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "extraEdits",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tsv",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "FullText",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagsUsingAnnotationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagAnnotationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationOnBookForBookPublicationIdFkeyUsingPublicationAccountIdTitleKeyUpdate",
        "description": "The fields on `publication` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationPatch",
            "description": "An object where the defined keys will be set on the `publication` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updatePublicationOnBookForBookPublicationIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BookOnBookForBookPublicationIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `publication` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationPatch",
            "description": "An object where the defined keys will be set on the `publication` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "PublicationPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BookPublicationIdFkeyPublicationCreateInput",
        "description": "The `publication` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "additionalMeta",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationOnBookForBookPublicationIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `book` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "bookPatch",
            "description": "An object where the defined keys will be set on the `book` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "BookPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BookPatch",
        "description": "Represents an update to a `Book`. Fields that are set will be updated.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "isbn13",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookTitle",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "imageUrl",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "languageCode",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publisher",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationDate",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Date",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "description",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookType",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BookPublicationIdFkeyBookCreateInput",
        "description": "The `book` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "isbn13",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookTitle",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "imageUrl",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "languageCode",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publisher",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationDate",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Date",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "description",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookType",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationOnAnnotationForAnnotationPublicationIdFkeyUsingPublicationAccountIdTitleKeyUpdate",
        "description": "The fields on `publication` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationPatch",
            "description": "An object where the defined keys will be set on the `publication` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updatePublicationOnAnnotationForAnnotationPublicationIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationOnAnnotationForAnnotationPublicationIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `publication` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationPatch",
            "description": "An object where the defined keys will be set on the `publication` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "PublicationPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationPublicationIdFkeyPublicationCreateInput",
        "description": "The `publication` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "additionalMeta",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationOnAnnotationForAnnotationAccountIdFkeyUsingNoDuplicateHighlightsUpdate",
        "description": "The fields on `annotation` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationPatch",
            "description": "An object where the defined keys will be set on the `annotation` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAnnotationOnAnnotationForAnnotationAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "highlightLocation",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "highlightText",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationOnAnnotationForAnnotationAccountIdFkeyUsingNoDuplicateNotesUpdate",
        "description": "The fields on `annotation` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationPatch",
            "description": "An object where the defined keys will be set on the `annotation` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAnnotationOnAnnotationForAnnotationAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "noteLocation",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "noteText",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountOnAnnotationForAnnotationAccountIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `annotation` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "annotationPatch",
            "description": "An object where the defined keys will be set on the `annotation` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AnnotationPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationAccountIdFkeyAnnotationCreateInput",
        "description": "The `annotation` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "color",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "highlightLocation",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "highlightText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "noteText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "noteLocation",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "recordedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "editedHighlightText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "extraEdits",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tsv",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "FullText",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagsUsingAnnotationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagAnnotationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountOnPublicationForPublicationAccountIdFkeyUsingAccountEmailKeyUpdate",
        "description": "The fields on `account` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "accountPatch",
            "description": "An object where the defined keys will be set on the `account` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updateAccountOnPublicationForPublicationAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationOnPublicationForPublicationAccountIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `account` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountPatch",
            "description": "An object where the defined keys will be set on the `account` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AccountPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAccountIdFkeyAccountCreateInput",
        "description": "The `account` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "status",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "emailVerified",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Boolean",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "group",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "firstName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "lastName",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagsUsingAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationOnPublicationForPublicationAccountIdFkeyUsingPublicationAccountIdTitleKeyUpdate",
        "description": "The fields on `publication` to look up the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationPatch",
            "description": "An object where the defined keys will be set on the `publication` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "updatePublicationOnPublicationForPublicationAccountIdFkeyPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AccountOnPublicationForPublicationAccountIdFkeyNodeIdUpdate",
        "description": "The globally unique `ID` look up for the row to update.",
        "fields": null,
        "inputFields": [
          {
            "name": "id",
            "description": "The globally unique `ID` which identifies a single `publication` to be connected.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationPatch",
            "description": "An object where the defined keys will be set on the `publication` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "PublicationPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAccountIdFkeyPublicationCreateInput",
        "description": "The `publication` to be created by this mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "additionalMeta",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "CreateAccountPayload",
        "description": "The output of our create `Account` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "account",
            "description": "The `Account` that was created by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountEdge",
            "description": "An edge for our `Account`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Account`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AccountsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AccountsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "CreateAnnotationInput",
        "description": "All input for the create `Annotation` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotation",
            "description": "The `Annotation` to be created by this mutation.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AnnotationInput",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationInput",
        "description": "An input for mutations affecting `Annotation`",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "color",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "highlightLocation",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "highlightText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "noteText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "noteLocation",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "recordedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "editedHighlightText",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "extraEdits",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tsv",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "FullText",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagsUsingAnnotationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagAnnotationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "CreateAnnotationPayload",
        "description": "The output of our create `Annotation` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotation",
            "description": "The `Annotation` that was created by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Annotation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationByPublicationId",
            "description": "Reads a single `Publication` that is related to this `Annotation`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": "Reads a single `Account` that is related to this `Annotation`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationEdge",
            "description": "An edge for our `Annotation`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Annotation`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AnnotationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AnnotationsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "CreateAnnotationTagInput",
        "description": "All input for the create `AnnotationTag` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationTag",
            "description": "The `AnnotationTag` to be created by this mutation.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AnnotationTagInput",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AnnotationTagInput",
        "description": "An input for mutations affecting `AnnotationTag`",
        "fields": null,
        "inputFields": [
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationToAnnotationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagAnnotationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagToTagId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagTagIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "CreateAnnotationTagPayload",
        "description": "The output of our create `AnnotationTag` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationTag",
            "description": "The `AnnotationTag` that was created by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "AnnotationTag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationByAnnotationId",
            "description": "Reads a single `Annotation` that is related to this `AnnotationTag`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Annotation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tagByTagId",
            "description": "Reads a single `Tag` that is related to this `AnnotationTag`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Tag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationTagEdge",
            "description": "An edge for our `AnnotationTag`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `AnnotationTag`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AnnotationTagsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AnnotationTagsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "CreateAuthorInput",
        "description": "All input for the create `Author` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "author",
            "description": "The `Author` to be created by this mutation.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AuthorInput",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "AuthorInput",
        "description": "An input for mutations affecting `Author`",
        "fields": null,
        "inputFields": [
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AuthorAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorsUsingAuthorId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorAuthorIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "CreateAuthorPayload",
        "description": "The output of our create `Author` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "author",
            "description": "The `Author` that was created by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Author",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": "Reads a single `Account` that is related to this `Author`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authorEdge",
            "description": "An edge for our `Author`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Author`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AuthorsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AuthorsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "CreateBookInput",
        "description": "All input for the create `Book` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "book",
            "description": "The `Book` to be created by this mutation.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "BookInput",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "BookInput",
        "description": "An input for mutations affecting `Book`",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "isbn13",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookTitle",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "imageUrl",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "languageCode",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publisher",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationDate",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Date",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "description",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookType",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "CreateBookPayload",
        "description": "The output of our create `Book` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "book",
            "description": "The `Book` that was created by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Book",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationByPublicationId",
            "description": "Reads a single `Publication` that is related to this `Book`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookEdge",
            "description": "An edge for our `Book`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Book`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "BooksOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "BooksEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "CreatePublicationInput",
        "description": "All input for the create `Publication` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publication",
            "description": "The `Publication` to be created by this mutation.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "PublicationInput",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationInput",
        "description": "An input for mutations affecting `Publication`",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "createdAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "updatedAt",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "Datetime",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "additionalMeta",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "JSON",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "BookPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorsUsingPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "CreatePublicationPayload",
        "description": "The output of our create `Publication` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publication",
            "description": "The `Publication` that was created by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": "Reads a single `Account` that is related to this `Publication`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationEdge",
            "description": "An edge for our `Publication`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Publication`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "PublicationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "PublicationsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "CreatePublicationAuthorInput",
        "description": "All input for the create `PublicationAuthor` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthor",
            "description": "The `PublicationAuthor` to be created by this mutation.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "PublicationAuthorInput",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "PublicationAuthorInput",
        "description": "An input for mutations affecting `PublicationAuthor`",
        "fields": null,
        "inputFields": [
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationToPublicationId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorPublicationIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorToAuthorId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "PublicationAuthorAuthorIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "CreatePublicationAuthorPayload",
        "description": "The output of our create `PublicationAuthor` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationAuthor",
            "description": "The `PublicationAuthor` that was created by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "PublicationAuthor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationByPublicationId",
            "description": "Reads a single `Publication` that is related to this `PublicationAuthor`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authorByAuthorId",
            "description": "Reads a single `Author` that is related to this `PublicationAuthor`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Author",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationAuthorEdge",
            "description": "An edge for our `PublicationAuthor`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `PublicationAuthor`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "PublicationAuthorsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "PublicationAuthorsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "CreateTagInput",
        "description": "All input for the create `Tag` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tag",
            "description": "The `Tag` to be created by this mutation.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "TagInput",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "TagInput",
        "description": "An input for mutations affecting `Tag`",
        "fields": null,
        "inputFields": [
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "SCALAR",
              "name": "UUID",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountToAccountId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "TagAccountIdFkeyInput",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagsUsingTagId",
            "description": null,
            "type": {
              "kind": "INPUT_OBJECT",
              "name": "AnnotationTagTagIdFkeyInverseInput",
              "ofType": null
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "CreateTagPayload",
        "description": "The output of our create `Tag` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tag",
            "description": "The `Tag` that was created by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Tag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": "Reads a single `Account` that is related to this `Tag`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tagEdge",
            "description": "An edge for our `Tag`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Tag`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "TagsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "TagsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateAccountInput",
        "description": "All input for the `updateAccount` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "The globally unique `ID` which will identify a single `Account` to be updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountPatch",
            "description": "An object where the defined keys will be set on the `Account` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AccountPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "UpdateAccountPayload",
        "description": "The output of our update `Account` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "account",
            "description": "The `Account` that was updated by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountEdge",
            "description": "An edge for our `Account`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Account`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AccountsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AccountsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateAccountByAccountIdInput",
        "description": "All input for the `updateAccountByAccountId` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountPatch",
            "description": "An object where the defined keys will be set on the `Account` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AccountPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateAccountByEmailInput",
        "description": "All input for the `updateAccountByEmail` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountPatch",
            "description": "An object where the defined keys will be set on the `Account` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AccountPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateAnnotationInput",
        "description": "All input for the `updateAnnotation` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "The globally unique `ID` which will identify a single `Annotation` to be updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "annotationPatch",
            "description": "An object where the defined keys will be set on the `Annotation` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AnnotationPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "UpdateAnnotationPayload",
        "description": "The output of our update `Annotation` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotation",
            "description": "The `Annotation` that was updated by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Annotation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationByPublicationId",
            "description": "Reads a single `Publication` that is related to this `Annotation`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": "Reads a single `Account` that is related to this `Annotation`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationEdge",
            "description": "An edge for our `Annotation`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Annotation`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AnnotationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AnnotationsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateAnnotationByAnnotationIdInput",
        "description": "All input for the `updateAnnotationByAnnotationId` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationPatch",
            "description": "An object where the defined keys will be set on the `Annotation` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AnnotationPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateAnnotationByPublicationIdAndAccountIdAndHighlightLocationAndHighlightTextInput",
        "description": "All input for the `updateAnnotationByPublicationIdAndAccountIdAndHighlightLocationAndHighlightText` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationPatch",
            "description": "An object where the defined keys will be set on the `Annotation` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AnnotationPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "highlightLocation",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "highlightText",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateAnnotationByPublicationIdAndAccountIdAndNoteLocationAndNoteTextInput",
        "description": "All input for the `updateAnnotationByPublicationIdAndAccountIdAndNoteLocationAndNoteText` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationPatch",
            "description": "An object where the defined keys will be set on the `Annotation` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AnnotationPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "noteLocation",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "noteText",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateAnnotationTagInput",
        "description": "All input for the `updateAnnotationTag` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "The globally unique `ID` which will identify a single `AnnotationTag` to be updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagPatch",
            "description": "An object where the defined keys will be set on the `AnnotationTag` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AnnotationTagPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "UpdateAnnotationTagPayload",
        "description": "The output of our update `AnnotationTag` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationTag",
            "description": "The `AnnotationTag` that was updated by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "AnnotationTag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationByAnnotationId",
            "description": "Reads a single `Annotation` that is related to this `AnnotationTag`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Annotation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tagByTagId",
            "description": "Reads a single `Tag` that is related to this `AnnotationTag`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Tag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationTagEdge",
            "description": "An edge for our `AnnotationTag`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `AnnotationTag`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AnnotationTagsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AnnotationTagsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateAnnotationTagByAnnotationIdAndTagIdInput",
        "description": "All input for the `updateAnnotationTagByAnnotationIdAndTagId` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationTagPatch",
            "description": "An object where the defined keys will be set on the `AnnotationTag` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AnnotationTagPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateAuthorInput",
        "description": "All input for the `updateAuthor` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "The globally unique `ID` which will identify a single `Author` to be updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "authorPatch",
            "description": "An object where the defined keys will be set on the `Author` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AuthorPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "UpdateAuthorPayload",
        "description": "The output of our update `Author` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "author",
            "description": "The `Author` that was updated by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Author",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": "Reads a single `Account` that is related to this `Author`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authorEdge",
            "description": "An edge for our `Author`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Author`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AuthorsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AuthorsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateAuthorByAuthorIdInput",
        "description": "All input for the `updateAuthorByAuthorId` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorPatch",
            "description": "An object where the defined keys will be set on the `Author` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AuthorPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateAuthorByFullNameInput",
        "description": "All input for the `updateAuthorByFullName` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorPatch",
            "description": "An object where the defined keys will be set on the `Author` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AuthorPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateAuthorByAccountIdAndFullNameInput",
        "description": "All input for the `updateAuthorByAccountIdAndFullName` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorPatch",
            "description": "An object where the defined keys will be set on the `Author` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "AuthorPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateBookInput",
        "description": "All input for the `updateBook` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "The globally unique `ID` which will identify a single `Book` to be updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "bookPatch",
            "description": "An object where the defined keys will be set on the `Book` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "BookPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "UpdateBookPayload",
        "description": "The output of our update `Book` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "book",
            "description": "The `Book` that was updated by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Book",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationByPublicationId",
            "description": "Reads a single `Publication` that is related to this `Book`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookEdge",
            "description": "An edge for our `Book`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Book`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "BooksOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "BooksEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateBookByPublicationIdInput",
        "description": "All input for the `updateBookByPublicationId` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "bookPatch",
            "description": "An object where the defined keys will be set on the `Book` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "BookPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdatePublicationInput",
        "description": "All input for the `updatePublication` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "The globally unique `ID` which will identify a single `Publication` to be updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationPatch",
            "description": "An object where the defined keys will be set on the `Publication` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "PublicationPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "UpdatePublicationPayload",
        "description": "The output of our update `Publication` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publication",
            "description": "The `Publication` that was updated by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": "Reads a single `Account` that is related to this `Publication`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationEdge",
            "description": "An edge for our `Publication`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Publication`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "PublicationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "PublicationsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdatePublicationByPublicationIdInput",
        "description": "All input for the `updatePublicationByPublicationId` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationPatch",
            "description": "An object where the defined keys will be set on the `Publication` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "PublicationPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdatePublicationByAccountIdAndTitleInput",
        "description": "All input for the `updatePublicationByAccountIdAndTitle` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationPatch",
            "description": "An object where the defined keys will be set on the `Publication` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "PublicationPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdatePublicationAuthorInput",
        "description": "All input for the `updatePublicationAuthor` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "The globally unique `ID` which will identify a single `PublicationAuthor` to be updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorPatch",
            "description": "An object where the defined keys will be set on the `PublicationAuthor` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "PublicationAuthorPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "UpdatePublicationAuthorPayload",
        "description": "The output of our update `PublicationAuthor` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationAuthor",
            "description": "The `PublicationAuthor` that was updated by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "PublicationAuthor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationByPublicationId",
            "description": "Reads a single `Publication` that is related to this `PublicationAuthor`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authorByAuthorId",
            "description": "Reads a single `Author` that is related to this `PublicationAuthor`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Author",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationAuthorEdge",
            "description": "An edge for our `PublicationAuthor`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `PublicationAuthor`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "PublicationAuthorsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "PublicationAuthorsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdatePublicationAuthorByPublicationIdAndAuthorIdInput",
        "description": "All input for the `updatePublicationAuthorByPublicationIdAndAuthorId` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationAuthorPatch",
            "description": "An object where the defined keys will be set on the `PublicationAuthor` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "PublicationAuthorPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateTagInput",
        "description": "All input for the `updateTag` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "The globally unique `ID` which will identify a single `Tag` to be updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagPatch",
            "description": "An object where the defined keys will be set on the `Tag` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "TagPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "UpdateTagPayload",
        "description": "The output of our update `Tag` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tag",
            "description": "The `Tag` that was updated by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Tag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": "Reads a single `Account` that is related to this `Tag`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tagEdge",
            "description": "An edge for our `Tag`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Tag`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "TagsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "TagsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateTagByTagIdInput",
        "description": "All input for the `updateTagByTagId` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagPatch",
            "description": "An object where the defined keys will be set on the `Tag` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "TagPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "UpdateTagByAccountIdAndTagNameInput",
        "description": "All input for the `updateTagByAccountIdAndTagName` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagPatch",
            "description": "An object where the defined keys will be set on the `Tag` being updated.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "INPUT_OBJECT",
                "name": "TagPatch",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteAccountInput",
        "description": "All input for the `deleteAccount` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "The globally unique `ID` which will identify a single `Account` to be deleted.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DeleteAccountPayload",
        "description": "The output of our delete `Account` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "account",
            "description": "The `Account` that was deleted by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deletedAccountId",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountEdge",
            "description": "An edge for our `Account`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Account`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AccountsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AccountsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteAccountByAccountIdInput",
        "description": "All input for the `deleteAccountByAccountId` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteAccountByEmailInput",
        "description": "All input for the `deleteAccountByEmail` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "email",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteAnnotationInput",
        "description": "All input for the `deleteAnnotation` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "The globally unique `ID` which will identify a single `Annotation` to be deleted.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DeleteAnnotationPayload",
        "description": "The output of our delete `Annotation` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotation",
            "description": "The `Annotation` that was deleted by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Annotation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deletedAnnotationId",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationByPublicationId",
            "description": "Reads a single `Publication` that is related to this `Annotation`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": "Reads a single `Account` that is related to this `Annotation`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationEdge",
            "description": "An edge for our `Annotation`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Annotation`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AnnotationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AnnotationsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteAnnotationByAnnotationIdInput",
        "description": "All input for the `deleteAnnotationByAnnotationId` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteAnnotationByPublicationIdAndAccountIdAndHighlightLocationAndHighlightTextInput",
        "description": "All input for the `deleteAnnotationByPublicationIdAndAccountIdAndHighlightLocationAndHighlightText` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "highlightLocation",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "highlightText",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteAnnotationByPublicationIdAndAccountIdAndNoteLocationAndNoteTextInput",
        "description": "All input for the `deleteAnnotationByPublicationIdAndAccountIdAndNoteLocationAndNoteText` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "noteLocation",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "JSON",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "noteText",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteAnnotationTagInput",
        "description": "All input for the `deleteAnnotationTag` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "The globally unique `ID` which will identify a single `AnnotationTag` to be deleted.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DeleteAnnotationTagPayload",
        "description": "The output of our delete `AnnotationTag` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationTag",
            "description": "The `AnnotationTag` that was deleted by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "AnnotationTag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deletedAnnotationTagId",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationByAnnotationId",
            "description": "Reads a single `Annotation` that is related to this `AnnotationTag`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Annotation",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tagByTagId",
            "description": "Reads a single `Tag` that is related to this `AnnotationTag`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Tag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "annotationTagEdge",
            "description": "An edge for our `AnnotationTag`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `AnnotationTag`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AnnotationTagsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AnnotationTagsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteAnnotationTagByAnnotationIdAndTagIdInput",
        "description": "All input for the `deleteAnnotationTagByAnnotationIdAndTagId` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "annotationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteAuthorInput",
        "description": "All input for the `deleteAuthor` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "The globally unique `ID` which will identify a single `Author` to be deleted.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DeleteAuthorPayload",
        "description": "The output of our delete `Author` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "author",
            "description": "The `Author` that was deleted by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Author",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deletedAuthorId",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": "Reads a single `Account` that is related to this `Author`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authorEdge",
            "description": "An edge for our `Author`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Author`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "AuthorsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "AuthorsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteAuthorByAuthorIdInput",
        "description": "All input for the `deleteAuthorByAuthorId` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteAuthorByFullNameInput",
        "description": "All input for the `deleteAuthorByFullName` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteAuthorByAccountIdAndFullNameInput",
        "description": "All input for the `deleteAuthorByAccountIdAndFullName` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "fullName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteBookInput",
        "description": "All input for the `deleteBook` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "The globally unique `ID` which will identify a single `Book` to be deleted.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DeleteBookPayload",
        "description": "The output of our delete `Book` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "book",
            "description": "The `Book` that was deleted by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Book",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deletedBookId",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationByPublicationId",
            "description": "Reads a single `Publication` that is related to this `Book`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "bookEdge",
            "description": "An edge for our `Book`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Book`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "BooksOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "BooksEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteBookByPublicationIdInput",
        "description": "All input for the `deleteBookByPublicationId` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeletePublicationInput",
        "description": "All input for the `deletePublication` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "The globally unique `ID` which will identify a single `Publication` to be deleted.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DeletePublicationPayload",
        "description": "The output of our delete `Publication` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publication",
            "description": "The `Publication` that was deleted by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deletedPublicationId",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": "Reads a single `Account` that is related to this `Publication`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationEdge",
            "description": "An edge for our `Publication`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Publication`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "PublicationsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "PublicationsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeletePublicationByPublicationIdInput",
        "description": "All input for the `deletePublicationByPublicationId` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeletePublicationByAccountIdAndTitleInput",
        "description": "All input for the `deletePublicationByAccountIdAndTitle` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "title",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeletePublicationAuthorInput",
        "description": "All input for the `deletePublicationAuthor` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "The globally unique `ID` which will identify a single `PublicationAuthor` to be deleted.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DeletePublicationAuthorPayload",
        "description": "The output of our delete `PublicationAuthor` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationAuthor",
            "description": "The `PublicationAuthor` that was deleted by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "PublicationAuthor",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deletedPublicationAuthorId",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationByPublicationId",
            "description": "Reads a single `Publication` that is related to this `PublicationAuthor`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Publication",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "authorByAuthorId",
            "description": "Reads a single `Author` that is related to this `PublicationAuthor`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Author",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "publicationAuthorEdge",
            "description": "An edge for our `PublicationAuthor`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `PublicationAuthor`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "PublicationAuthorsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "PublicationAuthorsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeletePublicationAuthorByPublicationIdAndAuthorIdInput",
        "description": "All input for the `deletePublicationAuthorByPublicationIdAndAuthorId` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "publicationId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "authorId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteTagInput",
        "description": "All input for the `deleteTag` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "id",
            "description": "The globally unique `ID` which will identify a single `Tag` to be deleted.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "DeleteTagPayload",
        "description": "The output of our delete `Tag` mutation.",
        "fields": [
          {
            "name": "clientMutationId",
            "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tag",
            "description": "The `Tag` that was deleted by this mutation.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Tag",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deletedTagId",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "ID",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "query",
            "description": "Our root query field type. Allows us to run any query from our mutation payload.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "accountByAccountId",
            "description": "Reads a single `Account` that is related to this `Tag`.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "tagEdge",
            "description": "An edge for our `Tag`. May be used by Relay 1.",
            "args": [
              {
                "name": "orderBy",
                "description": "The method to use when ordering `Tag`.",
                "type": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "TagsOrderBy",
                      "ofType": null
                    }
                  }
                },
                "defaultValue": "[PRIMARY_KEY_ASC]"
              }
            ],
            "type": {
              "kind": "OBJECT",
              "name": "TagsEdge",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteTagByTagIdInput",
        "description": "All input for the `deleteTagByTagId` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "tagId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "INPUT_OBJECT",
        "name": "DeleteTagByAccountIdAndTagNameInput",
        "description": "All input for the `deleteTagByAccountIdAndTagName` mutation.",
        "fields": null,
        "inputFields": [
          {
            "name": "clientMutationId",
            "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": null
          },
          {
            "name": "accountId",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "UUID",
                "ofType": null
              }
            },
            "defaultValue": null
          },
          {
            "name": "tagName",
            "description": null,
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ],
        "interfaces": null,
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Schema",
        "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
        "fields": [
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "types",
            "description": "A list of all types supported by this server.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "queryType",
            "description": "The type that query operations will be rooted at.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "mutationType",
            "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "subscriptionType",
            "description": "If this server support subscription, the type that subscription operations will be rooted at.",
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "directives",
            "description": "A list of all directives supported by this server.",
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Directive",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Type",
        "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
        "fields": [
          {
            "name": "kind",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "ENUM",
                "name": "__TypeKind",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "specifiedByUrl",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "fields",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Field",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "interfaces",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "possibleTypes",
            "description": null,
            "args": [],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "enumValues",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__EnumValue",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "inputFields",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              }
            ],
            "type": {
              "kind": "LIST",
              "name": null,
              "ofType": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__InputValue",
                  "ofType": null
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ofType",
            "description": null,
            "args": [],
            "type": {
              "kind": "OBJECT",
              "name": "__Type",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "__TypeKind",
        "description": "An enum describing what kind of type a given `__Type` is.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "SCALAR",
            "description": "Indicates this type is a scalar.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "OBJECT",
            "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INTERFACE",
            "description": "Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "UNION",
            "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM",
            "description": "Indicates this type is an enum. `enumValues` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_OBJECT",
            "description": "Indicates this type is an input object. `inputFields` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "LIST",
            "description": "Indicates this type is a list. `ofType` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "NON_NULL",
            "description": "Indicates this type is a non-null. `ofType` is a valid field.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Field",
        "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "args",
            "description": null,
            "args": [
              {
                "name": "includeDeprecated",
                "description": null,
                "type": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                },
                "defaultValue": "false"
              }
            ],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isDeprecated",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deprecationReason",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__InputValue",
        "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "type",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "defaultValue",
            "description": "A GraphQL-formatted string representing the default value for this input value.",
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isDeprecated",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deprecationReason",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__EnumValue",
        "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isDeprecated",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "deprecationReason",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "OBJECT",
        "name": "__Directive",
        "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
        "fields": [
          {
            "name": "name",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "description",
            "description": null,
            "args": [],
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "isRepeatable",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "locations",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "ENUM",
                    "name": "__DirectiveLocation",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "args",
            "description": null,
            "args": [],
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "inputFields": null,
        "interfaces": [],
        "enumValues": null,
        "possibleTypes": null
      },
      {
        "kind": "ENUM",
        "name": "__DirectiveLocation",
        "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
        "fields": null,
        "inputFields": null,
        "interfaces": null,
        "enumValues": [
          {
            "name": "QUERY",
            "description": "Location adjacent to a query operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "MUTATION",
            "description": "Location adjacent to a mutation operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SUBSCRIPTION",
            "description": "Location adjacent to a subscription operation.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FIELD",
            "description": "Location adjacent to a field.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FRAGMENT_DEFINITION",
            "description": "Location adjacent to a fragment definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FRAGMENT_SPREAD",
            "description": "Location adjacent to a fragment spread.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INLINE_FRAGMENT",
            "description": "Location adjacent to an inline fragment.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "VARIABLE_DEFINITION",
            "description": "Location adjacent to a variable definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SCHEMA",
            "description": "Location adjacent to a schema definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "SCALAR",
            "description": "Location adjacent to a scalar definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "OBJECT",
            "description": "Location adjacent to an object type definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "FIELD_DEFINITION",
            "description": "Location adjacent to a field definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ARGUMENT_DEFINITION",
            "description": "Location adjacent to an argument definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INTERFACE",
            "description": "Location adjacent to an interface definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "UNION",
            "description": "Location adjacent to a union definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM",
            "description": "Location adjacent to an enum definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "ENUM_VALUE",
            "description": "Location adjacent to an enum value definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_OBJECT",
            "description": "Location adjacent to an input object type definition.",
            "isDeprecated": false,
            "deprecationReason": null
          },
          {
            "name": "INPUT_FIELD_DEFINITION",
            "description": "Location adjacent to an input object field definition.",
            "isDeprecated": false,
            "deprecationReason": null
          }
        ],
        "possibleTypes": null
      }
    ],
    "directives": [
      {
        "name": "include",
        "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
        "isRepeatable": false,
        "locations": [
          "FIELD",
          "FRAGMENT_SPREAD",
          "INLINE_FRAGMENT"
        ],
        "args": [
          {
            "name": "if",
            "description": "Included when true.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ]
      },
      {
        "name": "skip",
        "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
        "isRepeatable": false,
        "locations": [
          "FIELD",
          "FRAGMENT_SPREAD",
          "INLINE_FRAGMENT"
        ],
        "args": [
          {
            "name": "if",
            "description": "Skipped when true.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ]
      },
      {
        "name": "deprecated",
        "description": "Marks an element of a GraphQL schema as no longer supported.",
        "isRepeatable": false,
        "locations": [
          "FIELD_DEFINITION",
          "ARGUMENT_DEFINITION",
          "INPUT_FIELD_DEFINITION",
          "ENUM_VALUE"
        ],
        "args": [
          {
            "name": "reason",
            "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",
            "type": {
              "kind": "SCALAR",
              "name": "String",
              "ofType": null
            },
            "defaultValue": "\"No longer supported\""
          }
        ]
      },
      {
        "name": "specifiedBy",
        "description": "Exposes a URL that specifies the behaviour of this scalar.",
        "isRepeatable": false,
        "locations": [
          "SCALAR"
        ],
        "args": [
          {
            "name": "url",
            "description": "The URL that specifies the behaviour of this scalar.",
            "type": {
              "kind": "NON_NULL",
              "name": null,
              "ofType": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            "defaultValue": null
          }
        ]
      }
    ]
  }
}